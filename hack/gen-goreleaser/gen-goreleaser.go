/*
Copyright 2019 The KubeCarrier Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package main

import (
	"os"
	"text/template"
)

// This is mostly yaml hack to be done quickly
// if things become more complex than this, here's the full goreleaser config struct we could use
// https://github.com/goreleaser/goreleaser/blob/master/pkg/config/config.go

var tpl = template.Must(template.New(".goreleaser.yaml").Parse(`# Code generated by /hack/gen-goreleases DO NOT EDIT
project_name: kubecarrier
before:
release:
  github:
    owner: kubermatic
    name: kubecarrier
  prerelease: true
builds:
  - id: kubecarrier
    binary: kubecarrier
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - "386"
    env:
      - CGO_ENABLED=0
      - GO111MODULE=on
    main: cmd/kubectl-kubecarrier/main.go
    ldflags: >
      -s -w
      -X github.com/kubermatic/kubecarrier/pkg/internal/version.Version={{"{{"}}.Tag}}
      -X github.com/kubermatic/kubecarrier/pkg/internal/version.Branch={{"{{"}}.Tag}}
      -X github.com/kubermatic/kubecarrier/pkg/internal/version.Commit={{"{{"}}.ShortCommit}}
      -X github.com/kubermatic/kubecarrier/pkg/internal/version.BuildDate={{"{{"}}.Timestamp}}
    hooks:
      post:
        touch dist/version_{{"{{"}}.Version}}
{{- range .Components }}
  - id: {{ . }}
    binary: {{ . }}
    goos:
      - linux
    goarch:
      - amd64
    env:
      - CGO_ENABLED=0
      - GO111MODULE=on
    main: cmd/{{ . }}/main.go
    ldflags: >
      -s -w
      -X github.com/kubermatic/kubecarrier/pkg/internal/version.Version={{"{{"}}.Tag}}
      -X github.com/kubermatic/kubecarrier/pkg/internal/version.Branch={{"{{"}}.Tag}}
      -X github.com/kubermatic/kubecarrier/pkg/internal/version.Commit={{"{{"}}.ShortCommit}}
      -X github.com/kubermatic/kubecarrier/pkg/internal/version.BuildDate={{"{{"}}.Timestamp}}
{{- end }}
archives:
  - id: kubecarrier
    builds:
      - kubecarrier
    name_template: "{{"{{"}} .ProjectName }}_{{"{{"}} .Os }}_{{"{{"}} .Arch }}"
    format: tar.gz
    format_overrides:
    - goos: windows
      format: zip
checksum:
  name_template: "{{"{{"}} .ProjectName }}_checksums.txt"
  algorithm: sha256
dockers:
{{- range .Components }}
- goos: linux
  goarch: amd64
  binaries:
    - {{ . }}
  builds:
    - {{ . }}
  image_templates:
    - "quay.io/kubecarrier/{{ . }}:latest"
    - "quay.io/kubecarrier/{{ . }}:{{"{{"}} .Tag }}"
    - "quay.io/kubecarrier/{{ . }}:v{{"{{"}} .Major }}"
  skip_push: true
  dockerfile: config/dockerfiles/{{ . }}.Dockerfile
  build_flag_templates:
  - "--pull"
  - "--label=org.opencontainers.image.created={{"{{"}}.Date}}"
  - "--label=org.opencontainers.image.name={{"{{"}}.ProjectName}}"
  - "--label=org.opencontainers.image.revision={{"{{"}}.FullCommit}}"
  - "--label=org.opencontainers.image.version={{"{{"}}.Version}}"
{{- end }}
`))

type Data struct {
	Components []string
}

func main() {
	if err := tpl.Execute(os.Stdout, Data{
		Components: []string{
			"manager",
			"operator",
			"catapult",
			"ferry",
			"elevator",
		},
	}); err != nil {
		panic(err)
	}
}
