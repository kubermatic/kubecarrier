presubmits:
  - name: pull-kubermatic-kubecarrier-validate-prow-yaml
    always_run: true
    decorate: true
    clone_uri: ssh://git@github.com/kubermatic/kubecarrier.git
    extra_refs:
      - org: kubermatic
        repo: infra
        base_ref: master
        clone_uri: git@github.com:kubermatic/infra.git
    spec:
      containers:
        - image: gcr.io/k8s-prow/checkconfig:v20200203-711d3732b
          command:
            - /app/prow/cmd/checkconfig/app.binary
          args:
            - --plugin-config=/home/prow/go/src/github.com/kubermatic/infra/prow/plugins.yaml
            - --config-path=/home/prow/go/src/github.com/kubermatic/infra/prow/config.yaml
            - --job-config-path=/home/prow/go/src/github.com/kubermatic/infra/prow/jobs
            - --prow-yaml-repo-name=$(REPO_OWNER)/$(REPO_NAME)

  - name: pull-kubecarrier-test
    always_run: true
    decorate: true
    clone_uri: ssh://git@github.com/kubermatic/kubecarrier.git
    spec:
      containers:
        - image: quay.io/kubecarrier/test
          imagePullPolicy: Always
          command:
            - go-init
            - -main
            - make test
          env:
            - name: GO111MODULE
              value: "on"
          resources:
            requests:
              cpu: 4
  - name: pull-kubecarrier-lint
    always_run: true
    decorate: true
    clone_uri: ssh://git@github.com/kubermatic/kubecarrier.git
    spec:
      containers:
        - image: quay.io/kubecarrier/dev:v4
          imagePullPolicy: Always
          command:
            - go-init
            - -main
            - make lint
          env:
            - name: GO111MODULE
              value: "on"
          resources:
            requests:
              cpu: 4
              memory: 6Gi
  - name: pull-kubecarrier-e2e-v1.17
    always_run: true
    decorate: true
    clone_uri: ssh://git@github.com/kubermatic/kubecarrier.git
    spec:
      # DNS configuration allows inner cluster to access the internet.
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 1.1.1.1 # Cloudflare DNS servers
          - 1.0.0.1
      containers:
        - image: quay.io/kubecarrier/test
          imagePullPolicy: Always
          name: e2e-test
          command:
            - go-init
            - -main
            - make e2e-test
          env:
            - name: KIND_NODE_IMAGE
              value: "kindest/node:v1.17.5@sha256:ab3f9e6ec5ad8840eeb1f76c89bb7948c77bbf76bcebe1a8b59790b8ae9a283a"
            - name: GO111MODULE
              value: "on"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: kubecarrier-aws
                  key: key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: kubecarrier-aws
                  key: key_secret
            - name: AWS_DEFAULT_REGION
              valueFrom:
                secretKeyRef:
                  name: kubecarrier-aws
                  key: region
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 6
              memory: 8Gi
  - name: pull-kubecarrier-e2e-v1.16
    always_run: true
    decorate: true
    clone_uri: ssh://git@github.com/kubermatic/kubecarrier.git
    spec:
      # DNS configuration allows inner cluster to access the internet.
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 1.1.1.1 # Cloudflare DNS servers
          - 1.0.0.1
      containers:
        - image: quay.io/kubecarrier/test
          imagePullPolicy: Always
          name: e2e-test
          command:
            - go-init
            - -main
            - make e2e-test
          env:
            - name: KIND_NODE_IMAGE
              value: "kindest/node:v1.16.9@sha256:7175872357bc85847ec4b1aba46ed1d12fa054c83ac7a8a11f5c268957fd5765"
            - name: GO111MODULE
              value: "on"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: kubecarrier-aws
                  key: key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: kubecarrier-aws
                  key: key_secret
            - name: AWS_DEFAULT_REGION
              valueFrom:
                secretKeyRef:
                  name: kubecarrier-aws
                  key: region
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 6
              memory: 8Gi
postsubmits:
  - name: post-kubecarrier-test-image
    decorate: true
    clone_uri: ssh://git@github.com/kubermatic/kubecarrier.git
    branches:
      - ^master$
    run_if_changed: "(go.sum|go.mod|start-docker.sh|test.Dockerfile|.pre-commit-config.yaml)"
    spec:
      containers:
        - image: quay.io/kubecarrier/test
          imagePullPolicy: Always
          name: e2e-test
          command:
            - go-init
            - -main
            - make push-image-test
          env:
            - name: GO111MODULE
              value: "on"
            - name: QUAY_IO_USERNAME
              valueFrom:
                secretKeyRef:
                  name: kubecarrier-quay.io
                  key: username
            - name: QUAY_IO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kubecarrier-quay.io
                  key: password
          # docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 800m
              memory: 2Gi
