
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: crddiscoveries.core.kubecarrier.io
spec:
  group: core.kubecarrier.io
  names:
    kind: CRDDiscovery
    listKind: CRDDiscoveryList
    plural: crddiscoveries
    singular: crddiscovery
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.crd.metadata.name
      name: CRD
      type: string
    - jsonPath: .spec.serviceCluster.name
      name: Service Cluster
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CRDDiscovery is used inside KubeCarrier to fetch a CRD from another
          cluster and to offload cross cluster access to another component.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CRDDiscoverySpec defines the desired state of crdreference
            properties:
              crd:
                description: CRD references a CustomResourceDefinition within the
                  ServiceCluster.
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              serviceCluster:
                description: ServiceCluster references a ServiceCluster to search
                  the CRD on.
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
            required:
            - crd
            - serviceCluster
            type: object
          status:
            description: CRDDiscoveryStatus defines the observed state of crdreference
            properties:
              conditions:
                description: Conditions is a list of all conditions this CRDDiscovery
                  is in.
                items:
                  description: CRDDiscoveryCondition contains details for the current
                    condition of this CRDDiscovery.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transit from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is the human readable message indicating
                        details about last transition.
                      type: string
                    reason:
                      description: Reason is the (brief) reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status of the condition, one of ('True', 'False',
                        'Unknown').
                      type: string
                    type:
                      description: Type of the condition, currently ('Ready').
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              crdSpec:
                description: CRDSpec defines the original CRD specification from the
                  service cluster
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: spec describes how the user wants the resources to
                      appear
                    properties:
                      conversion:
                        description: conversion defines conversion settings for the
                          CRD.
                        properties:
                          strategy:
                            description: 'strategy specifies how custom resources
                              are converted between versions. Allowed values are:
                              - `None`: The converter only change the apiVersion and
                              would not touch any other field in the custom resource.
                              - `Webhook`: API Server will call to an external webhook
                              to do the conversion. Additional information   is needed
                              for this option. This requires spec.preserveUnknownFields
                              to be false, and spec.conversion.webhook to be set.'
                            type: string
                          webhook:
                            description: webhook describes how to call the conversion
                              webhook. Required when `strategy` is set to `Webhook`.
                            properties:
                              clientConfig:
                                description: clientConfig is the instructions for
                                  how to call the webhook if strategy is `Webhook`.
                                properties:
                                  caBundle:
                                    description: caBundle is a PEM encoded CA bundle
                                      which will be used to validate the webhook's
                                      server certificate. If unspecified, system trust
                                      roots on the apiserver are used.
                                    format: byte
                                    type: string
                                  service:
                                    description: "service is a reference to the service
                                      for this webhook. Either service or url must
                                      be specified. \n If the webhook is running within
                                      the cluster, then you should use `service`."
                                    properties:
                                      name:
                                        description: name is the name of the service.
                                          Required
                                        type: string
                                      namespace:
                                        description: namespace is the namespace of
                                          the service. Required
                                        type: string
                                      path:
                                        description: path is an optional URL path
                                          at which the webhook will be contacted.
                                        type: string
                                      port:
                                        description: port is an optional service port
                                          at which the webhook will be contacted.
                                          `port` should be a valid port number (1-65535,
                                          inclusive). Defaults to 443 for backward
                                          compatibility.
                                        format: int32
                                        type: integer
                                    required:
                                    - name
                                    - namespace
                                    type: object
                                  url:
                                    description: "url gives the location of the webhook,
                                      in standard URL form (`scheme://host:port/path`).
                                      Exactly one of `url` or `service` must be specified.
                                      \n The `host` should not refer to a service
                                      running in the cluster; use the `service` field
                                      instead. The host might be resolved via external
                                      DNS in some apiservers (e.g., `kube-apiserver`
                                      cannot resolve in-cluster DNS as that would
                                      be a layering violation). `host` may also be
                                      an IP address. \n Please note that using `localhost`
                                      or `127.0.0.1` as a `host` is risky unless you
                                      take great care to run this webhook on all hosts
                                      which run an apiserver which might need to make
                                      calls to this webhook. Such installs are likely
                                      to be non-portable, i.e., not easy to turn up
                                      in a new cluster. \n The scheme must be \"https\";
                                      the URL must begin with \"https://\". \n A path
                                      is optional, and if present may be any string
                                      permissible in a URL. You may use the path to
                                      pass an arbitrary string to the webhook, for
                                      example, a cluster identifier. \n Attempting
                                      to use a user or basic auth e.g. \"user:password@\"
                                      is not allowed. Fragments (\"#...\") and query
                                      parameters (\"?...\") are not allowed, either."
                                    type: string
                                type: object
                              conversionReviewVersions:
                                description: conversionReviewVersions is an ordered
                                  list of preferred `ConversionReview` versions the
                                  Webhook expects. The API server will use the first
                                  version in the list which it supports. If none of
                                  the versions specified in this list are supported
                                  by API server, conversion will fail for the custom
                                  resource. If a persisted Webhook configuration specifies
                                  allowed versions and does not include any versions
                                  known to the API Server, calls to the webhook will
                                  fail.
                                items:
                                  type: string
                                type: array
                            required:
                            - conversionReviewVersions
                            type: object
                        required:
                        - strategy
                        type: object
                      group:
                        description: group is the API group of the defined custom
                          resource. The custom resources are served under `/apis/<group>/...`.
                          Must match the name of the CustomResourceDefinition (in
                          the form `<names.plural>.<group>`).
                        type: string
                      names:
                        description: names specify the resource and kind names for
                          the custom resource.
                        properties:
                          categories:
                            description: categories is a list of grouped resources
                              this custom resource belongs to (e.g. 'all'). This is
                              published in API discovery documents, and used by clients
                              to support invocations like `kubectl get all`.
                            items:
                              type: string
                            type: array
                          kind:
                            description: kind is the serialized kind of the resource.
                              It is normally CamelCase and singular. Custom resource
                              instances will use this value as the `kind` attribute
                              in API calls.
                            type: string
                          listKind:
                            description: listKind is the serialized kind of the list
                              for this resource. Defaults to "`kind`List".
                            type: string
                          plural:
                            description: plural is the plural name of the resource
                              to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
                              Must match the name of the CustomResourceDefinition
                              (in the form `<names.plural>.<group>`). Must be all
                              lowercase.
                            type: string
                          shortNames:
                            description: shortNames are short names for the resource,
                              exposed in API discovery documents, and used by clients
                              to support invocations like `kubectl get <shortname>`.
                              It must be all lowercase.
                            items:
                              type: string
                            type: array
                          singular:
                            description: singular is the singular name of the resource.
                              It must be all lowercase. Defaults to lowercased `kind`.
                            type: string
                        required:
                        - kind
                        - plural
                        type: object
                      preserveUnknownFields:
                        description: preserveUnknownFields indicates that object fields
                          which are not specified in the OpenAPI schema should be
                          preserved when persisting to storage. apiVersion, kind,
                          metadata and known fields inside metadata are always preserved.
                          This field is deprecated in favor of setting `x-preserve-unknown-fields`
                          to true in `spec.versions[*].schema.openAPIV3Schema`. See
                          https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields
                          for details.
                        type: boolean
                      scope:
                        description: scope indicates whether the defined custom resource
                          is cluster- or namespace-scoped. Allowed values are `Cluster`
                          and `Namespaced`. Default is `Namespaced`.
                        type: string
                      versions:
                        description: 'versions is the list of all API versions of
                          the defined custom resource. Version names are used to compute
                          the order in which served versions are listed in API discovery.
                          If the version string is "kube-like", it will sort above
                          non "kube-like" version strings, which are ordered lexicographically.
                          "Kube-like" versions start with a "v", then are followed
                          by a number (the major version), then optionally the string
                          "alpha" or "beta" and another number (the minor version).
                          These are sorted first by GA > beta > alpha (where GA is
                          a version with no suffix such as beta or alpha), and then
                          by comparing major version, then minor version. An example
                          sorted list of versions: v10, v2, v1, v11beta2, v10beta3,
                          v3beta1, v12alpha1, v11alpha2, foo1, foo10.'
                        items:
                          description: CustomResourceDefinitionVersion describes a
                            version for CRD.
                          properties:
                            additionalPrinterColumns:
                              description: additionalPrinterColumns specifies additional
                                columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables
                                for details. If no columns are specified, a single
                                column displaying the age of the custom resource is
                                used.
                              items:
                                description: CustomResourceColumnDefinition specifies
                                  a column for server side printing.
                                properties:
                                  description:
                                    description: description is a human readable description
                                      of this column.
                                    type: string
                                  format:
                                    description: format is an optional OpenAPI type
                                      definition for this column. The 'name' format
                                      is applied to the primary identifier column
                                      to assist in clients identifying column is the
                                      resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
                                      for details.
                                    type: string
                                  jsonPath:
                                    description: jsonPath is a simple JSON path (i.e.
                                      with array notation) which is evaluated against
                                      each custom resource to produce the value for
                                      this column.
                                    type: string
                                  name:
                                    description: name is a human readable name for
                                      the column.
                                    type: string
                                  priority:
                                    description: priority is an integer defining the
                                      relative importance of this column compared
                                      to others. Lower numbers are considered higher
                                      priority. Columns that may be omitted in limited
                                      space scenarios should be given a priority greater
                                      than 0.
                                    format: int32
                                    type: integer
                                  type:
                                    description: type is an OpenAPI type definition
                                      for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
                                      for details.
                                    type: string
                                required:
                                - jsonPath
                                - name
                                - type
                                type: object
                              type: array
                            name:
                              description: name is the version name, e.g. “v1”, “v2beta1”,
                                etc. The custom resources are served under this version
                                at `/apis/<group>/<version>/...` if `served` is true.
                              type: string
                            schema:
                              description: schema describes the schema used for validation,
                                pruning, and defaulting of this version of the custom
                                resource.
                              properties:
                                openAPIV3Schema:
                                  description: openAPIV3Schema is the OpenAPI v3 schema
                                    to use for validation and pruning.
                                  properties:
                                    $ref:
                                      type: string
                                    $schema:
                                      description: JSONSchemaURL represents a schema
                                        url.
                                      type: string
                                    additionalItems:
                                      description: JSONSchemaPropsOrBool represents
                                        JSONSchemaProps or a boolean value. Defaults
                                        to true for the boolean property.
                                      type: object
                                    additionalProperties:
                                      description: JSONSchemaPropsOrBool represents
                                        JSONSchemaProps or a boolean value. Defaults
                                        to true for the boolean property.
                                      type: object
                                    allOf:
                                      items: {}
                                      type: array
                                    anyOf:
                                      items: {}
                                      type: array
                                    default:
                                      description: default is a default value for
                                        undefined object fields. Defaulting is a beta
                                        feature under the CustomResourceDefaulting
                                        feature gate. Defaulting requires spec.preserveUnknownFields
                                        to be false.
                                      x-kubernetes-preserve-unknown-fields: true
                                    definitions:
                                      additionalProperties: {}
                                      description: JSONSchemaDefinitions contains
                                        the models explicitly defined in this spec.
                                      type: object
                                    dependencies:
                                      additionalProperties:
                                        description: JSONSchemaPropsOrStringArray
                                          represents a JSONSchemaProps or a string
                                          array.
                                        type: object
                                      description: JSONSchemaDependencies represent
                                        a dependencies property.
                                      type: object
                                    description:
                                      type: string
                                    enum:
                                      items:
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    example:
                                      x-kubernetes-preserve-unknown-fields: true
                                    exclusiveMaximum:
                                      type: boolean
                                    exclusiveMinimum:
                                      type: boolean
                                    externalDocs:
                                      description: ExternalDocumentation allows referencing
                                        an external resource for extended documentation.
                                      properties:
                                        description:
                                          type: string
                                        url:
                                          type: string
                                      type: object
                                    format:
                                      type: string
                                    id:
                                      type: string
                                    items:
                                      description: JSONSchemaPropsOrArray represents
                                        a value that can either be a JSONSchemaProps
                                        or an array of JSONSchemaProps. Mainly here
                                        for serialization purposes.
                                      type: object
                                    maxItems:
                                      format: int64
                                      type: integer
                                    maxLength:
                                      format: int64
                                      type: integer
                                    maxProperties:
                                      format: int64
                                      type: integer
                                    maximum: {}
                                    minItems:
                                      format: int64
                                      type: integer
                                    minLength:
                                      format: int64
                                      type: integer
                                    minProperties:
                                      format: int64
                                      type: integer
                                    minimum: {}
                                    multipleOf: {}
                                    not: {}
                                    nullable:
                                      type: boolean
                                    oneOf:
                                      items: {}
                                      type: array
                                    pattern:
                                      type: string
                                    patternProperties:
                                      additionalProperties: {}
                                      type: object
                                    properties:
                                      additionalProperties: {}
                                      type: object
                                    required:
                                      items:
                                        type: string
                                      type: array
                                    title:
                                      type: string
                                    type:
                                      type: string
                                    uniqueItems:
                                      type: boolean
                                    x-kubernetes-embedded-resource:
                                      description: x-kubernetes-embedded-resource
                                        defines that the value is an embedded Kubernetes
                                        runtime.Object, with TypeMeta and ObjectMeta.
                                        The type must be object. It is allowed to
                                        further restrict the embedded object. kind,
                                        apiVersion and metadata are validated automatically.
                                        x-kubernetes-preserve-unknown-fields is allowed
                                        to be true, but does not have to be if the
                                        object is fully specified (up to kind, apiVersion,
                                        metadata).
                                      type: boolean
                                    x-kubernetes-int-or-string:
                                      description: "x-kubernetes-int-or-string specifies
                                        that this value is either an integer or a
                                        string. If this is true, an empty type is
                                        allowed and type as child of anyOf is permitted
                                        if following one of the following patterns:
                                        \n 1) anyOf:    - type: integer    - type:
                                        string 2) allOf:    - anyOf:      - type:
                                        integer      - type: string    - ... zero
                                        or more"
                                      type: boolean
                                    x-kubernetes-list-map-keys:
                                      description: "x-kubernetes-list-map-keys annotates
                                        an array with the x-kubernetes-list-type `map`
                                        by specifying the keys used as the index of
                                        the map. \n This tag MUST only be used on
                                        lists that have the \"x-kubernetes-list-type\"
                                        extension set to \"map\". Also, the values
                                        specified for this attribute must be a scalar
                                        typed field of the child structure (no nesting
                                        is supported)."
                                      items:
                                        type: string
                                      type: array
                                    x-kubernetes-list-type:
                                      description: "x-kubernetes-list-type annotates
                                        an array to further describe its topology.
                                        This extension must only be used on lists
                                        and may have 3 possible values: \n 1) `atomic`:
                                        the list is treated as a single entity, like
                                        a scalar.      Atomic lists will be entirely
                                        replaced when updated. This extension      may
                                        be used on any type of list (struct, scalar,
                                        ...). 2) `set`:      Sets are lists that must
                                        not have multiple items with the same value.
                                        Each      value must be a scalar (or another
                                        atomic type). 3) `map`:      These lists are
                                        like maps in that their elements have a non-index
                                        key      used to identify them. Order is preserved
                                        upon merge. The map tag      must only be
                                        used on a list with elements of type object.
                                        Defaults to atomic for arrays."
                                      type: string
                                    x-kubernetes-preserve-unknown-fields:
                                      description: x-kubernetes-preserve-unknown-fields
                                        stops the API server decoding step from pruning
                                        fields which are not specified in the validation
                                        schema. This affects fields recursively, but
                                        switches back to normal pruning behaviour
                                        if nested properties or additionalProperties
                                        are specified in the schema. This can either
                                        be true or undefined. False is forbidden.
                                      type: boolean
                                  type: object
                              type: object
                            served:
                              description: served is a flag enabling/disabling this
                                version from being served via REST APIs
                              type: boolean
                            storage:
                              description: storage indicates this version should be
                                used when persisting custom resources to storage.
                                There must be exactly one version with storage=true.
                              type: boolean
                            subresources:
                              description: subresources specify what subresources
                                this version of the defined custom resource have.
                              properties:
                                scale:
                                  description: scale indicates the custom resource
                                    should serve a `/scale` subresource that returns
                                    an `autoscaling/v1` Scale object.
                                  properties:
                                    labelSelectorPath:
                                      description: 'labelSelectorPath defines the
                                        JSON path inside of a custom resource that
                                        corresponds to Scale `status.selector`. Only
                                        JSON paths without the array notation are
                                        allowed. Must be a JSON Path under `.status`
                                        or `.spec`. Must be set to work with HorizontalPodAutoscaler.
                                        The field pointed by this JSON path must be
                                        a string field (not a complex selector struct)
                                        which contains a serialized label selector
                                        in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource
                                        If there is no value under the given path
                                        in the custom resource, the `status.selector`
                                        value in the `/scale` subresource will default
                                        to the empty string.'
                                      type: string
                                    specReplicasPath:
                                      description: specReplicasPath defines the JSON
                                        path inside of a custom resource that corresponds
                                        to Scale `spec.replicas`. Only JSON paths
                                        without the array notation are allowed. Must
                                        be a JSON Path under `.spec`. If there is
                                        no value under the given path in the custom
                                        resource, the `/scale` subresource will return
                                        an error on GET.
                                      type: string
                                    statusReplicasPath:
                                      description: statusReplicasPath defines the
                                        JSON path inside of a custom resource that
                                        corresponds to Scale `status.replicas`. Only
                                        JSON paths without the array notation are
                                        allowed. Must be a JSON Path under `.status`.
                                        If there is no value under the given path
                                        in the custom resource, the `status.replicas`
                                        value in the `/scale` subresource will default
                                        to 0.
                                      type: string
                                  required:
                                  - specReplicasPath
                                  - statusReplicasPath
                                  type: object
                                status:
                                  description: 'status indicates the custom resource
                                    should serve a `/status` subresource. When enabled:
                                    1. requests to the custom resource primary endpoint
                                    ignore changes to the `status` stanza of the object.
                                    2. requests to the custom resource `/status` subresource
                                    ignore changes to anything other than the `status`
                                    stanza of the object.'
                                  type: object
                              type: object
                          required:
                          - name
                          - served
                          - storage
                          type: object
                        type: array
                    required:
                    - group
                    - names
                    - scope
                    - versions
                    type: object
                  status:
                    description: status indicates the actual state of the CustomResourceDefinition
                    properties:
                      acceptedNames:
                        description: acceptedNames are the names that are actually
                          being used to serve discovery. They may be different than
                          the names in spec.
                        properties:
                          categories:
                            description: categories is a list of grouped resources
                              this custom resource belongs to (e.g. 'all'). This is
                              published in API discovery documents, and used by clients
                              to support invocations like `kubectl get all`.
                            items:
                              type: string
                            type: array
                          kind:
                            description: kind is the serialized kind of the resource.
                              It is normally CamelCase and singular. Custom resource
                              instances will use this value as the `kind` attribute
                              in API calls.
                            type: string
                          listKind:
                            description: listKind is the serialized kind of the list
                              for this resource. Defaults to "`kind`List".
                            type: string
                          plural:
                            description: plural is the plural name of the resource
                              to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
                              Must match the name of the CustomResourceDefinition
                              (in the form `<names.plural>.<group>`). Must be all
                              lowercase.
                            type: string
                          shortNames:
                            description: shortNames are short names for the resource,
                              exposed in API discovery documents, and used by clients
                              to support invocations like `kubectl get <shortname>`.
                              It must be all lowercase.
                            items:
                              type: string
                            type: array
                          singular:
                            description: singular is the singular name of the resource.
                              It must be all lowercase. Defaults to lowercased `kind`.
                            type: string
                        required:
                        - kind
                        - plural
                        type: object
                      conditions:
                        description: conditions indicate state for particular aspects
                          of a CustomResourceDefinition
                        items:
                          description: CustomResourceDefinitionCondition contains
                            details for the current condition of this pod.
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime last time the condition
                                transitioned from one status to another.
                              format: date-time
                              type: string
                            message:
                              description: message is a human-readable message indicating
                                details about last transition.
                              type: string
                            reason:
                              description: reason is a unique, one-word, CamelCase
                                reason for the condition's last transition.
                              type: string
                            status:
                              description: status is the status of the condition.
                                Can be True, False, Unknown.
                              type: string
                            type:
                              description: type is the type of the condition. Types
                                include Established, NamesAccepted and Terminating.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      storedVersions:
                        description: storedVersions lists all versions of CustomResources
                          that were ever persisted. Tracking these versions allows
                          a migration path for stored versions in etcd. The field
                          is mutable so a migration controller can finish a migration
                          to another version (ensuring no old objects are left in
                          storage), and then remove the rest of the versions from
                          this list. Versions may not be removed from `spec.versions`
                          while they exist in this list.
                        items:
                          type: string
                        type: array
                    required:
                    - acceptedNames
                    - storedVersions
                    type: object
                required:
                - spec
                type: object
              observedGeneration:
                description: The most recent generation observed by the controller.
                format: int64
                type: integer
              phase:
                description: DEPRECATED. Phase represents the current lifecycle state
                  of this object consider this field DEPRECATED, it will be removed
                  as soon as there is a mechanism to map conditions to a string when
                  printing the property is only present for display purposes, for
                  everything else use conditions
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
