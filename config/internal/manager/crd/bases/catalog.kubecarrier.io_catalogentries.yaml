
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: catalogentries.catalog.kubecarrier.io
spec:
  group: catalog.kubecarrier.io
  names:
    kind: CatalogEntry
    listKind: CatalogEntryList
    plural: catalogentries
    shortNames:
    - ce
    singular: catalogentry
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CatalogEntry adds additional metadata to a set of CRD's and groups
          the same Kind for multiple ServiceClusters
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CatalogEntrySpec defines the desired state of CatalogEntry
            properties:
              crdSelector:
                description: CRDSelector selects CRD objects that should be part of
                  this catalog.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              metadata:
                description: CatalogEntryMetadata contains the metadata (display name,
                  description, etc) of the CatalogEntry.
                properties:
                  description:
                    description: Description shows the human-readable description
                      of this CatalogEntry.
                    type: string
                  displayName:
                    description: DisplayName shows the human-readable name of this
                      CatalogEntry.
                    type: string
                type: object
            type: object
          status:
            description: CatalogEntryStatus defines the observed state of CatalogEntry.
            properties:
              conditions:
                description: Conditions represents the latest available observations
                  of a CatalogEntry's current state.
                items:
                  description: CatalogEntryCondition contains details for the current
                    condition of this CatalogEntry.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transits from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is the human readable message indicating
                        details about last transition.
                      type: string
                    reason:
                      description: Reason is the (brief) reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition, one of ('True',
                        'False', 'Unknown').
                      type: string
                    type:
                      description: Type is the type of the CatalogEntry condition,
                        currently ('Ready').
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              crds:
                description: CRDs holds the information about the underlying CRDs
                  that are offered by this CatalogEntry.
                items:
                  description: CRDInformation contains type information about the
                    CRD.
                  properties:
                    apiGroup:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                    serviceCluster:
                      description: ServiceCluster references a ServiceClusterReference
                        of this CRD.
                      properties:
                        name:
                          type: string
                      required:
                      - name
                      type: object
                    versions:
                      items:
                        description: CRDVersion holds CRD version specific details.
                        properties:
                          name:
                            type: string
                          schema:
                            description: CustomResourceValidation is a list of validation
                              methods for CustomResources.
                            properties:
                              openAPIV3Schema:
                                description: openAPIV3Schema is the OpenAPI v3 schema
                                  to use for validation and pruning.
                                properties:
                                  $ref:
                                    type: string
                                  $schema:
                                    description: JSONSchemaURL represents a schema
                                      url.
                                    type: string
                                  additionalItems:
                                    description: JSONSchemaPropsOrBool represents
                                      JSONSchemaProps or a boolean value. Defaults
                                      to true for the boolean property.
                                    type: object
                                  additionalProperties:
                                    description: JSONSchemaPropsOrBool represents
                                      JSONSchemaProps or a boolean value. Defaults
                                      to true for the boolean property.
                                    type: object
                                  allOf:
                                    items: {}
                                    type: array
                                  anyOf:
                                    items: {}
                                    type: array
                                  default:
                                    description: default is a default value for undefined
                                      object fields. Defaulting is a beta feature
                                      under the CustomResourceDefaulting feature gate.
                                      CustomResourceDefinitions with defaults must
                                      be created using the v1 (or newer) CustomResourceDefinition
                                      API.
                                    x-kubernetes-preserve-unknown-fields: true
                                  definitions:
                                    additionalProperties: {}
                                    description: JSONSchemaDefinitions contains the
                                      models explicitly defined in this spec.
                                    type: object
                                  dependencies:
                                    additionalProperties:
                                      description: JSONSchemaPropsOrStringArray represents
                                        a JSONSchemaProps or a string array.
                                      type: object
                                    description: JSONSchemaDependencies represent
                                      a dependencies property.
                                    type: object
                                  description:
                                    type: string
                                  enum:
                                    items:
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                  example:
                                    x-kubernetes-preserve-unknown-fields: true
                                  exclusiveMaximum:
                                    type: boolean
                                  exclusiveMinimum:
                                    type: boolean
                                  externalDocs:
                                    description: ExternalDocumentation allows referencing
                                      an external resource for extended documentation.
                                    properties:
                                      description:
                                        type: string
                                      url:
                                        type: string
                                    type: object
                                  format:
                                    type: string
                                  id:
                                    type: string
                                  items:
                                    description: JSONSchemaPropsOrArray represents
                                      a value that can either be a JSONSchemaProps
                                      or an array of JSONSchemaProps. Mainly here
                                      for serialization purposes.
                                    type: object
                                  maxItems:
                                    format: int64
                                    type: integer
                                  maxLength:
                                    format: int64
                                    type: integer
                                  maxProperties:
                                    format: int64
                                    type: integer
                                  maximum: {}
                                  minItems:
                                    format: int64
                                    type: integer
                                  minLength:
                                    format: int64
                                    type: integer
                                  minProperties:
                                    format: int64
                                    type: integer
                                  minimum: {}
                                  multipleOf: {}
                                  not: {}
                                  nullable:
                                    type: boolean
                                  oneOf:
                                    items: {}
                                    type: array
                                  pattern:
                                    type: string
                                  patternProperties:
                                    additionalProperties: {}
                                    type: object
                                  properties:
                                    additionalProperties: {}
                                    type: object
                                  required:
                                    items:
                                      type: string
                                    type: array
                                  title:
                                    type: string
                                  type:
                                    type: string
                                  uniqueItems:
                                    type: boolean
                                  x-kubernetes-embedded-resource:
                                    description: x-kubernetes-embedded-resource defines
                                      that the value is an embedded Kubernetes runtime.Object,
                                      with TypeMeta and ObjectMeta. The type must
                                      be object. It is allowed to further restrict
                                      the embedded object. kind, apiVersion and metadata
                                      are validated automatically. x-kubernetes-preserve-unknown-fields
                                      is allowed to be true, but does not have to
                                      be if the object is fully specified (up to kind,
                                      apiVersion, metadata).
                                    type: boolean
                                  x-kubernetes-int-or-string:
                                    description: "x-kubernetes-int-or-string specifies
                                      that this value is either an integer or a string.
                                      If this is true, an empty type is allowed and
                                      type as child of anyOf is permitted if following
                                      one of the following patterns: \n 1) anyOf:
                                      \   - type: integer    - type: string 2) allOf:
                                      \   - anyOf:      - type: integer      - type:
                                      string    - ... zero or more"
                                    type: boolean
                                  x-kubernetes-list-map-keys:
                                    description: "x-kubernetes-list-map-keys annotates
                                      an array with the x-kubernetes-list-type `map`
                                      by specifying the keys used as the index of
                                      the map. \n This tag MUST only be used on lists
                                      that have the \"x-kubernetes-list-type\" extension
                                      set to \"map\". Also, the values specified for
                                      this attribute must be a scalar typed field
                                      of the child structure (no nesting is supported)."
                                    items:
                                      type: string
                                    type: array
                                  x-kubernetes-list-type:
                                    description: "x-kubernetes-list-type annotates
                                      an array to further describe its topology. This
                                      extension must only be used on lists and may
                                      have 3 possible values: \n 1) `atomic`: the
                                      list is treated as a single entity, like a scalar.
                                      \     Atomic lists will be entirely replaced
                                      when updated. This extension      may be used
                                      on any type of list (struct, scalar, ...). 2)
                                      `set`:      Sets are lists that must not have
                                      multiple items with the same value. Each      value
                                      must be a scalar (or another atomic type). 3)
                                      `map`:      These lists are like maps in that
                                      their elements have a non-index key      used
                                      to identify them. Order is preserved upon merge.
                                      The map tag      must only be used on a list
                                      with elements of type object. Defaults to atomic
                                      for arrays."
                                    type: string
                                  x-kubernetes-preserve-unknown-fields:
                                    description: x-kubernetes-preserve-unknown-fields
                                      stops the API server decoding step from pruning
                                      fields which are not specified in the validation
                                      schema. This affects fields recursively, but
                                      switches back to normal pruning behaviour if
                                      nested properties or additionalProperties are
                                      specified in the schema. This can either be
                                      true or undefined. False is forbidden.
                                    type: boolean
                                type: object
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                  required:
                  - apiGroup
                  - kind
                  - name
                  - serviceCluster
                  - versions
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  for this CatalogEntry by the controller.
                format: int64
                type: integer
              phase:
                description: DEPRECATED. Phase represents the current lifecycle state
                  of this object. Consider this field DEPRECATED, it will be removed
                  as soon as there is a mechanism to map conditions to strings when
                  printing the property. This is only for display purpose, for everything
                  else use conditions.
                type: string
            required:
            - crds
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
