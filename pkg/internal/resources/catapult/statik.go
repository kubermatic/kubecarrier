/*
Copyright 2020 The KubeCarrier Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by statik. DO NOT EDIT.

package catapult

import (
	"github.com/rakyll/statik/fs"
)

func init() {
	data := "PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1c\x00	\x00certmanager/certificate.yamlUT\x05\x00\x01\x80Cm8# The following manifests contain a self-signed issuer CR and a certificate CR.\n# More document can be found at https://docs.cert-manager.io\n# WARNING: Targets CertManager 0.11 check https://docs.cert-manager.io/en/latest/tasks/upgrading/index.html for breaking changes\napiVersion: cert-manager.io/v1alpha2\nkind: Issuer\nmetadata:\n  name: selfsigned-issuer\n  namespace: system\nspec:\n  selfSigned: {}\n---\napiVersion: cert-manager.io/v1alpha2\nkind: Certificate\nmetadata:\n  name: serving-cert  # this name should match the one appeared in kustomizeconfig.yaml\n  namespace: system\nspec:\n  # $(SERVICE_NAME) and $(SERVICE_NAMESPACE) will be substituted by kustomize\n  dnsNames:\n  - $(SERVICE_NAME).$(SERVICE_NAMESPACE).svc\n  - $(SERVICE_NAME).$(SERVICE_NAMESPACE).svc.cluster.local\n  issuerRef:\n    kind: Issuer\n    name: selfsigned-issuer\n  secretName: $(SECRET_NAME)-webhook-service-cert # this secret will not be prefixed, since it's not managed by kustomize\nPK\x07\x08\xc9\x11f\x07\xbc\x03\x00\x00\xbc\x03\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1e\x00	\x00certmanager/kustomization.yamlUT\x05\x00\x01\x80Cm8resources:\n- certificate.yaml\n\nconfigurations:\n- kustomizeconfig.yaml\nPK\x07\x08\xa0\xeb\noF\x00\x00\x00F\x00\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00	\x00certmanager/kustomizeconfig.yamlUT\x05\x00\x01\x80Cm8# This configuration is for teaching kustomize how to update name ref and var substitution\nnameReference:\n- kind: Issuer\n  group: cert-manager.io\n  fieldSpecs:\n  - kind: Certificate\n    group: cert-manager.io\n    path: spec/issuerRef/name\n\nvarReference:\n- kind: Certificate\n  group: cert-manager.io\n  path: spec/commonName\n- kind: Certificate\n  group: cert-manager.io\n  path: spec/dnsNames\n- kind: Certificate\n  group: cert-manager.io\n  path: spec/secretName\nPK\x07\x08\xcc\x17nH\xcb\x01\x00\x00\xcb\x01\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1a\x00	\x00default/kustomization.yamlUT\x05\x00\x01\x80Cm8# Adds namespace to all resources.\nnamespace: kubecarrier-system\n\n# Value of this field is prepended to the\n# names of all resources, e.g. a deployment named\n# \"wordpress\" becomes \"alices-wordpress\".\n# Note that it should also match with the prefix (text before '-') of the namespace\n# field above.\nnamePrefix: catapult-\n\ncommonLabels:\n  kubecarrier.io/role: catapult\n\nbases:\n- ../rbac\n- ../manager\n# [WEBHOOK] To enable webhook, uncomment all the sections with [WEBHOOK] prefix including the one in crd/kustomization.yaml\n- ../webhook\n# [CERTMANAGER] To enable cert-manager, uncomment all sections with 'CERTMANAGER'. 'WEBHOOK' components are required.\n- ../certmanager\n# [PROMETHEUS] To enable prometheus monitor, uncomment all sections with 'PROMETHEUS'.\n#- ../prometheus\n\npatchesStrategicMerge:\n  # If you want your manager to expose the /metrics\n  # endpoint w/o any authn/z, uncomment the following line and\n  # comment manager_auth_proxy_patch.yaml.\n  # Only one of manager_auth_proxy_patch.yaml and\n  # manager_prometheus_metrics_patch.yaml should be enabled.\n#- manager_prometheus_metrics_patch.yaml\n\n# [WEBHOOK] To enable webhook, uncomment all the sections with [WEBHOOK] prefix including the one in crd/kustomization.yaml\n- manager_webhook_patch.yaml\n\n# [CERTMANAGER] To enable cert-manager, uncomment all sections with 'CERTMANAGER'.\n# Uncomment 'CERTMANAGER' sections in crd/kustomization.yaml to enable the CA injection in the admission webhooks.\n# 'CERTMANAGER' needs to be enabled to use ca injection\n- webhookcainjection_patch.yaml\n\n# the following config is for teaching kustomize how to do var substitution\nvars:\n# [CERTMANAGER] To enable cert-manager, uncomment all sections with 'CERTMANAGER' prefix.\n- name: CERTIFICATE_NAMESPACE # namespace of the certificate CR\n  objref:\n    kind: Certificate\n    group: cert-manager.io\n    version: v1alpha2\n    name: serving-cert # this name should match the one in certificate.yaml\n  fieldref:\n    fieldpath: metadata.namespace\n- name: CERTIFICATE_NAME\n  objref:\n    kind: Certificate\n    group: cert-manager.io\n    version: v1alpha2\n    name: serving-cert # this name should match the one in certificate.yaml\n- name: SERVICE_NAMESPACE # namespace of the service\n  objref:\n    kind: Service\n    version: v1\n    name: webhook-service\n  fieldref:\n    fieldpath: metadata.namespace\n- name: SERVICE_NAME\n  objref:\n    kind: Service\n    version: v1\n    name: webhook-service\n- name: SECRET_NAME\n  objref:\n    kind: Service\n    version: v1\n    name: webhook-service\n\nconfigurations:\n- kustomizeconfig.yaml\nPK\x07\x08Z\xc2\xb6\xf8\x02\n\x00\x00\x02\n\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1c\x00	\x00default/kustomizeconfig.yamlUT\x05\x00\x01\x80Cm8varReference:\n  - kind: Deployment\n    group: apps\n    path: spec/template/spec/volumes/secret\nPK\x07\x08\xbd\x00\xa3\xc7_\x00\x00\x00_\x00\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\"\x00	\x00default/manager_webhook_patch.yamlUT\x05\x00\x01\x80Cm8apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: manager\n  namespace: system\nspec:\n  template:\n    spec:\n      containers:\n      - name: manager\n        ports:\n        - containerPort: 9443\n          name: webhook-server\n          protocol: TCP\n        volumeMounts:\n        - mountPath: /tmp/k8s-webhook-server/serving-certs\n          name: cert\n          readOnly: true\n      volumes:\n      - name: cert\n        secret:\n          defaultMode: 420\n          secretName: $(SECRET_NAME)-webhook-service-cert\nPK\x07\x08\x861cw\x01\x02\x00\x00\x01\x02\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00%\x00	\x00default/webhookcainjection_patch.yamlUT\x05\x00\x01\x80Cm8# This patch add annotation to admission webhook config and\n# the variables $(CERTIFICATE_NAMESPACE) and $(CERTIFICATE_NAME) will be substituted by kustomize.\napiVersion: admissionregistration.k8s.io/v1beta1\nkind: MutatingWebhookConfiguration\nmetadata:\n  name: mutating-webhook-configuration\n  annotations:\n    cert-manager.io/inject-ca-from: $(CERTIFICATE_NAMESPACE)/$(CERTIFICATE_NAME)\n# Enable for Validating Webhooks.\n#---\n#apiVersion: admissionregistration.k8s.io/v1beta1\n#kind: ValidatingWebhookConfiguration\n#metadata:\n#  name: validating-webhook-configuration\n#  annotations:\n#    cert-manager.io/inject-ca-from: $(CERTIFICATE_NAMESPACE)/$(CERTIFICATE_NAME)\nPK\x07\x08:Z\xb9\xdb\x9a\x02\x00\x00\x9a\x02\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1a\x00	\x00manager/kustomization.yamlUT\x05\x00\x01\x80Cm8resources:\n- manager.yaml\nPK\x07\x08\xbc,\x82b\x1a\x00\x00\x00\x1a\x00\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x00	\x00manager/manager.yamlUT\x05\x00\x01\x80Cm8apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: manager\n  namespace: system\n  labels:\n    control-plane: manager\nspec:\n  selector:\n    matchLabels:\n      control-plane: manager\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        control-plane: manager\n    spec:\n      serviceAccountName: sa\n      containers:\n      - image: quay.io/kubecarrier/catapult:latest\n        name: manager\n        args:\n        - \"--cert-dir=$(CERT_DIR)\"\n        env:\n        - name: KUBERNETES_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: CERT_DIR\n          value: \"/tmp/k8s-webhook-server/serving-certs\"\n        resources:\n          limits:\n            cpu: 100m\n            memory: 30Mi\n          requests:\n            cpu: 100m\n            memory: 20Mi\n        ports:\n          - name: readiness-port\n            containerPort: 9440\n            protocol: TCP\n        readinessProbe:\n          httpGet:\n            path: /readyz\n            port: readiness-port\n        livenessProbe:\n          httpGet:\n            path: /healthz\n            port: readiness-port\n      terminationGracePeriodSeconds: 10\nPK\x07\x08\xfbn\x11\x9a\x90\x04\x00\x00\x90\x04\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1d\x00	\x00prometheus/kustomization.yamlUT\x05\x00\x01\x80Cm8resources:\n- monitor.yaml\nPK\x07\x08*\xdd\xe9\x9c\x1a\x00\x00\x00\x1a\x00\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00	\x00prometheus/monitor.yamlUT\x05\x00\x01\x80Cm8\n# Prometheus Monitor Service (Metrics)\napiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  labels:\n    control-plane: manager\n  name: manager-metrics-monitor\n  namespace: system\nspec:\n  endpoints:\n    - path: /metrics\n      port: https\n  selector:\n    control-plane: manager\nPK\x07\x08P\xff\xd7\xb2&\x01\x00\x00&\x01\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x12\x00	\x00rbac/bindings.yamlUT\x05\x00\x01\x80Cm8apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: sa\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: manager\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: manager\nsubjects:\n- kind: ServiceAccount\n  name: sa\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: manager\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: manager\nsubjects:\n- kind: ServiceAccount\n  name: sa\nPK\x07\x08\xa8\xc1#~\xe9\x01\x00\x00\xe9\x01\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x16\x00	\x00rbac/cluster_role.yamlUT\x05\x00\x01\x80Cm8# generated by operator on run\n# because we work with arbitrary types, we only know the needed permissions on runtime\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  creationTimestamp: null\n  name: manager\nrules: []\nPK\x07\x08(\x1a\x93S\xef\x00\x00\x00\xef\x00\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00	\x00rbac/kustomization.yamlUT\x05\x00\x01\x80Cm8resources:\n- role.yaml\n- cluster_role.yaml\n- bindings.yaml\n- leader_election_role.yaml\n- leader_election_role_binding.yaml\nPK\x07\x08\x02\x01\xf9\x87{\x00\x00\x00{\x00\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1e\x00	\x00rbac/leader_election_role.yamlUT\x05\x00\x01\x80Cm8# permissions to do leader election.\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: leader-election-role\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - configmaps\n  verbs:\n  - get\n  - list\n  - watch\n  - create\n  - update\n  - patch\n  - delete\n- apiGroups:\n  - \"\"\n  resources:\n  - configmaps/status\n  verbs:\n  - get\n  - update\n  - patch\n- apiGroups:\n  - \"\"\n  resources:\n  - events\n  verbs:\n  - create\nPK\x07\x08\x0e\xcb\x95\x88\xa3\x01\x00\x00\xa3\x01\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00&\x00	\x00rbac/leader_election_role_binding.yamlUT\x05\x00\x01\x80Cm8apiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: leader-election-rolebinding\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: leader-election-role\nsubjects:\n- kind: ServiceAccount\n  name: sa\nPK\x07\x08+n\xda1\xee\x00\x00\x00\xee\x00\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0e\x00	\x00rbac/role.yamlUT\x05\x00\x01\x80Cm8\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  creationTimestamp: null\n  name: manager\nrules:\n- apiGroups:\n  - kubecarrier.io\n  resources:\n  - serviceclusterassignments\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - kubecarrier.io\n  resources:\n  - serviceclusterassignments/status\n  verbs:\n  - get\nPK\x07\x08\x89{\x9d2F\x01\x00\x00F\x01\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1a\x00	\x00webhook/kustomization.yamlUT\x05\x00\x01\x80Cm8resources:\n- manifests.yaml\n- service.yaml\n\nconfigurations:\n- kustomizeconfig.yaml\nPK\x07\x08\xd6\xd7\xcd\xabS\x00\x00\x00S\x00\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1c\x00	\x00webhook/kustomizeconfig.yamlUT\x05\x00\x01\x80Cm8# the following config is for teaching kustomize where to look at when substituting vars.\n# It requires kustomize v2.1.0 or newer to work properly.\nnameReference:\n- kind: Service\n  version: v1\n  fieldSpecs:\n  - kind: MutatingWebhookConfiguration\n    group: admissionregistration.k8s.io\n    path: webhooks/clientConfig/service/name\n  - kind: ValidatingWebhookConfiguration\n    group: admissionregistration.k8s.io\n    path: webhooks/clientConfig/service/name\n\nnamespace:\n- kind: MutatingWebhookConfiguration\n  group: admissionregistration.k8s.io\n  path: webhooks/clientConfig/service/namespace\n  create: true\n- kind: ValidatingWebhookConfiguration\n  group: admissionregistration.k8s.io\n  path: webhooks/clientConfig/service/namespace\n  create: true\n\nvarReference:\n- path: metadata/annotations\nPK\x07\x08w\x1d~\x1e\x17\x03\x00\x00\x17\x03\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x16\x00	\x00webhook/manifests.yamlUT\x05\x00\x01\x80Cm8PK\x07\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x00	\x00webhook/service.yamlUT\x05\x00\x01\x80Cm8\napiVersion: v1\nkind: Service\nmetadata:\n  name: webhook-service\n  namespace: system\nspec:\n  ports:\n    - port: 443\n      targetPort: 9443\n  selector:\n    control-plane: manager\nPK\x07\x08\xf4	\xd6f\xb1\x00\x00\x00\xb1\x00\x00\x00PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\xc9\x11f\x07\xbc\x03\x00\x00\xbc\x03\x00\x00\x1c\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\x00\x00\x00\x00certmanager/certificate.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\xa0\xeb\noF\x00\x00\x00F\x00\x00\x00\x1e\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\x0f\x04\x00\x00certmanager/kustomization.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\xcc\x17nH\xcb\x01\x00\x00\xcb\x01\x00\x00 \x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\xaa\x04\x00\x00certmanager/kustomizeconfig.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(Z\xc2\xb6\xf8\x02\n\x00\x00\x02\n\x00\x00\x1a\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\xcc\x06\x00\x00default/kustomization.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\xbd\x00\xa3\xc7_\x00\x00\x00_\x00\x00\x00\x1c\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\x1f\x11\x00\x00default/kustomizeconfig.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\x861cw\x01\x02\x00\x00\x01\x02\x00\x00\"\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\xd1\x11\x00\x00default/manager_webhook_patch.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(:Z\xb9\xdb\x9a\x02\x00\x00\x9a\x02\x00\x00%\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81+\x14\x00\x00default/webhookcainjection_patch.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\xbc,\x82b\x1a\x00\x00\x00\x1a\x00\x00\x00\x1a\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81!\x17\x00\x00manager/kustomization.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\xfbn\x11\x9a\x90\x04\x00\x00\x90\x04\x00\x00\x14\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\x8c\x17\x00\x00manager/manager.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(*\xdd\xe9\x9c\x1a\x00\x00\x00\x1a\x00\x00\x00\x1d\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81g\x1c\x00\x00prometheus/kustomization.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(P\xff\xd7\xb2&\x01\x00\x00&\x01\x00\x00\x17\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\xd5\x1c\x00\x00prometheus/monitor.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\xa8\xc1#~\xe9\x01\x00\x00\xe9\x01\x00\x00\x12\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81I\x1e\x00\x00rbac/bindings.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!((\x1a\x93S\xef\x00\x00\x00\xef\x00\x00\x00\x16\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81{ \x00\x00rbac/cluster_role.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\x02\x01\xf9\x87{\x00\x00\x00{\x00\x00\x00\x17\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\xb7!\x00\x00rbac/kustomization.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\x0e\xcb\x95\x88\xa3\x01\x00\x00\xa3\x01\x00\x00\x1e\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\x80\"\x00\x00rbac/leader_election_role.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(+n\xda1\xee\x00\x00\x00\xee\x00\x00\x00&\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81x$\x00\x00rbac/leader_election_role_binding.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\x89{\x9d2F\x01\x00\x00F\x01\x00\x00\x0e\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\xc3%\x00\x00rbac/role.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\xd6\xd7\xcd\xabS\x00\x00\x00S\x00\x00\x00\x1a\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81N'\x00\x00webhook/kustomization.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(w\x1d~\x1e\x17\x03\x00\x00\x17\x03\x00\x00\x1c\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\xf2'\x00\x00webhook/kustomizeconfig.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x16\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\\+\x00\x00webhook/manifests.yamlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\xf4	\xd6f\xb1\x00\x00\x00\xb1\x00\x00\x00\x14\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\xa9+\x00\x00webhook/service.yamlUT\x05\x00\x01\x80Cm8PK\x05\x06\x00\x00\x00\x00\x15\x00\x15\x00\xad\x06\x00\x00\xa5,\x00\x00\x00\x00"
	fs.Register(data)
}
