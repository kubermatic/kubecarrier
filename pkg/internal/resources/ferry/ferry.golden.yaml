- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/instance: hans
      app.kubernetes.io/managed-by: kubecarrier-operator
      app.kubernetes.io/name: ferry
      app.kubernetes.io/version: was not build properly
      kubecarrier.io/role: ferry
    name: hans-ferry-manager
    namespace: provider-1000
  rules:
  - apiGroups:
    - kubecarrier.io
    resources:
    - customresourcediscoveries
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - kubecarrier.io
    resources:
    - customresourcediscoveries/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - kubecarrier.io
    resources:
    - serviceclusterassignments
    verbs:
    - create
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - kubecarrier.io
    resources:
    - serviceclusterassignments/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - kubecarrier.io
    resources:
    - serviceclusters
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - kubecarrier.io
    resources:
    - serviceclusters/status
    verbs:
    - get
    - patch
    - update
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app.kubernetes.io/instance: hans
      app.kubernetes.io/managed-by: kubecarrier-operator
      app.kubernetes.io/name: ferry
      app.kubernetes.io/version: was not build properly
      kubecarrier.io/role: ferry
    name: hans-ferry-sa
    namespace: provider-1000
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    labels:
      app.kubernetes.io/instance: hans
      app.kubernetes.io/managed-by: kubecarrier-operator
      app.kubernetes.io/name: ferry
      app.kubernetes.io/version: was not build properly
      kubecarrier.io/role: ferry
    name: hans-ferry-manager
    namespace: provider-1000
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: hans-ferry-manager
  subjects:
  - kind: ServiceAccount
    name: hans-ferry-sa
    namespace: provider-1000
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    labels:
      app.kubernetes.io/instance: hans
      app.kubernetes.io/managed-by: kubecarrier-operator
      app.kubernetes.io/name: ferry
      app.kubernetes.io/version: was not build properly
      kubecarrier.io/role: ferry
    name: hans-ferry-leader-election-role
    namespace: provider-1000
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - ""
    resources:
    - configmaps/status
    verbs:
    - get
    - update
    - patch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    labels:
      app.kubernetes.io/instance: hans
      app.kubernetes.io/managed-by: kubecarrier-operator
      app.kubernetes.io/name: ferry
      app.kubernetes.io/version: was not build properly
      kubecarrier.io/role: ferry
    name: hans-ferry-leader-election-rolebinding
    namespace: provider-1000
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: hans-ferry-leader-election-role
  subjects:
  - kind: ServiceAccount
    name: hans-ferry-sa
    namespace: provider-1000
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/instance: hans
      app.kubernetes.io/managed-by: kubecarrier-operator
      app.kubernetes.io/name: ferry
      app.kubernetes.io/version: was not build properly
      control-plane: manager
      kubecarrier.io/role: ferry
    name: hans-ferry-manager
    namespace: provider-1000
  spec:
    replicas: 1
    selector:
      matchLabels:
        control-plane: manager
        kubecarrier.io/role: ferry
    template:
      metadata:
        labels:
          control-plane: manager
          kubecarrier.io/role: ferry
      spec:
        containers:
        - args:
          - --service-cluster-name=$(SERVICE_CLUSTER)
          - --service-cluster-kubeconfig=/kubeconfig/kubeconfig
          - --provider-namespace=$(KUBERNETES_NAMESPACE)
          env:
          - name: SERVICE_CLUSTER
            value: hans
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: quay.io/kubecarrier/ferry:was not build properly
          name: manager
          resources:
            limits:
              cpu: 100m
              memory: 30Mi
            requests:
              cpu: 100m
              memory: 20Mi
          volumeMounts:
          - mountPath: /kubeconfig
            name: kubeconfig
        serviceAccountName: hans-ferry-sa
        terminationGracePeriodSeconds: 10
        volumes:
        - name: kubeconfig
          secret:
            items:
            - key: kubeconfig
              path: kubeconfig
            optional: false
            secretName: service-cluster-100
