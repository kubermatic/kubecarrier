- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: null
    name: tenants.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      kind: Tenant
      listKind: TenantList
      plural: tenants
      shortNames:
      - tn
      singular: tenant
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.phase
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Tenant sets up permissions and references to allow a end-user
            group to interact with providers' services.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: TenantSpec defines the desired state of Tenant.
              type: object
            status:
              description: TenantStatus defines the observed state of Tenant.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of a Tenant's current state.
                  items:
                    description: TenantCondition contains details for the current
                      condition of this Tenant.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transits from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is the human readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is the (brief) reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status is the status of the condition, one of
                          ('True', 'False', 'Unknown').
                        type: string
                      type:
                        description: Type is the type of the Tenant condition, currently
                          ('Ready').
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                namespaceName:
                  description: NamespaceName is the name of the namespace that the
                    Tenant manages.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the most recent generation observed
                    for this Tenant by the controller.
                  format: int64
                  type: integer
                phase:
                  description: DEPRECATED. Phase represents the current lifecycle
                    state of this object. Consider this field DEPRECATED, it will
                    be removed as soon as there is a mechanism to map conditions to
                    strings when printing the property. This is only for display purpose,
                    for everything else use conditions.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: null
    name: providers.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      kind: Provider
      listKind: ProviderList
      plural: providers
      shortNames:
      - pdr
      singular: provider
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.namespaceName
        name: Provider Namespace
        type: string
      - jsonPath: .spec.displayName
        name: Display Name
        type: string
      - jsonPath: .status.phase
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Provider is the service provider representation in the KubeCarrier
            control-plane.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ProviderSpec defines the desired state of Provider.
              properties:
                metadata:
                  description: ProviderMetadata contains the metadata (display name,
                    description, etc) of the Provider.
                  properties:
                    description:
                      description: Description shows the human-readable description
                        of this Provider.
                      type: string
                    displayName:
                      description: DisplayName shows the human-readable name of this
                        Provider.
                      type: string
                  type: object
              type: object
            status:
              description: ProviderStatus defines the observed state of Provider.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of a Provider's current state.
                  items:
                    description: ProviderCondition contains details for the current
                      condition of this Provider.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transits from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is the human readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is the (brief) reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status is the status of the condition, one of
                          ('True', 'False', 'Unknown').
                        type: string
                      type:
                        description: Type is the type of the Provider condition, currently
                          ('Ready').
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                namespaceName:
                  description: NamespaceName is the name of the namespace that the
                    Provider manages.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the most recent generation observed
                    for this Provider by the controller.
                  format: int64
                  type: integer
                phase:
                  description: DEPRECATED. Phase represents the current lifecycle
                    state of this object. Consider this field DEPRECATED, it will
                    be removed as soon as there is a mechanism to map conditions to
                    strings when printing the property. This is only for display purpose,
                    for everything else use conditions.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: null
    name: tenantreferences.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      kind: TenantReference
      listKind: TenantReferenceList
      plural: tenantreferences
      shortNames:
      - tr
      singular: tenantreference
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TenantReference is a read-only object exposing the Tenant information.
            TenantReference lives in the provider's namespace. The provider is allowed
            modifying TenantReference's labels, marking them at will. This allows
            the tenant granular tenant selection for the offered services catalogs.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: TenantReferenceSpec defines the desired state of TenantReference
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: null
    name: catalogentries.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      kind: CatalogEntry
      listKind: CatalogEntryList
      plural: catalogentries
      shortNames:
      - ce
      singular: catalogentry
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: CatalogEntry adds additional metadata to a set of CRD's and
            groups the same Kind for multiple ServiceClusters
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: CatalogEntrySpec defines the desired state of CatalogEntry
              properties:
                crdSelector:
                  description: CRDSelector selects CRD objects that should be part
                    of this catalog.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                metadata:
                  description: Metadata contains the metadata (display name, description,
                    etc) of the CatalogEntry.
                  properties:
                    description:
                      description: Description shows the human-readable description
                        of this CatalogEntry.
                      type: string
                    displayName:
                      description: DisplayName shows the human-readable name of this
                        CatalogEntry.
                      type: string
                  type: object
              type: object
            status:
              description: CatalogEntryStatus defines the observed state of CatalogEntry.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of a CatalogEntry's current state.
                  items:
                    description: CatalogEntryCondition contains details for the current
                      condition of this CatalogEntry.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transits from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is the human readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is the (brief) reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status is the status of the condition, one of
                          ('True', 'False', 'Unknown').
                        type: string
                      type:
                        description: Type is the type of the CatalogEntry condition,
                          currently ('Ready').
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                crds:
                  description: CRDs holds the information about the underlying CRDs
                    that are offered by this CatalogEntry.
                  items:
                    description: CRDInformation contains type information about the
                      CRD.
                    properties:
                      apiGroup:
                        type: string
                      kind:
                        type: string
                      name:
                        type: string
                      serviceCluster:
                        description: ServiceCluster references a ServiceClusterReference
                          of this CRD.
                        properties:
                          name:
                            type: string
                        required:
                        - name
                        type: object
                      versions:
                        items:
                          description: CRDVersion holds CRD version specific details.
                          properties:
                            name:
                              description: 'Name of this version, for example: v1,
                                v1alpha1, v1beta1'
                              type: string
                            schema:
                              description: Schema of this CRD version.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                          - name
                          type: object
                        type: array
                    required:
                    - apiGroup
                    - kind
                    - name
                    - serviceCluster
                    - versions
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the most recent generation observed
                    for this CatalogEntry by the controller.
                  format: int64
                  type: integer
                phase:
                  description: DEPRECATED. Phase represents the current lifecycle
                    state of this object. Consider this field DEPRECATED, it will
                    be removed as soon as there is a mechanism to map conditions to
                    strings when printing the property. This is only for display purpose,
                    for everything else use conditions.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: null
    name: catalogs.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      kind: Catalog
      listKind: CatalogList
      plural: catalogs
      shortNames:
      - cl
      singular: catalog
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.phase
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Catalog publishes a selection of CatalogEntries to a selection
            of Tenants.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: CatalogSpec defines the desired state of Catalog
              properties:
                catalogEntrySelector:
                  description: CatalogEntrySelector selects CatalogEntry objects that
                    should be part of this catalog. If this is not specified, it will
                    match all CatalogEntries.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                tenantReferenceSelector:
                  description: TenantReferenceSelector selects TenantReference objects
                    that the catalog should be published to. If this is not specified,
                    it will match all TenantReferences.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
              type: object
            status:
              description: CatalogStatus defines the observed state of Catalog.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of a Catalog's current state.
                  items:
                    description: CatalogCondition contains details for the current
                      condition of this Catalog.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transits from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is the human readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is the (brief) reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status is the status of the condition, one of
                          ('True', 'False', 'Unknown').
                        type: string
                      type:
                        description: Type is the type of the Catalog condition, currently
                          ('Ready').
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                entries:
                  description: Entries is the list of the CatalogEntries that selected
                    by this Catalog.
                  items:
                    description: ObjectReference describes the link to another object
                      in the same namespace.
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the most recent generation observed
                    for this Catalog by the controller.
                  format: int64
                  type: integer
                phase:
                  description: DEPRECATED. Phase represents the current lifecycle
                    state of this object. Consider this field DEPRECATED, it will
                    be removed as soon as there is a mechanism to map conditions to
                    strings when printing the property. This is only for display purpose,
                    for everything else use conditions.
                  type: string
                tenants:
                  description: Tenants is the list of the Tenants(TenantReference)
                    that selected by this Catalog.
                  items:
                    description: ObjectReference describes the link to another object
                      in the same namespace.
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: null
    name: offerings.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      kind: Offering
      listKind: OfferingList
      plural: offerings
      singular: offering
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .offering.displayName
        name: Display Name
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Offering is used for Tenants to discover services that have
            been made available to them.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            offering:
              description: OfferingData defines the data (metadata, provider, crds,
                etc.) of Offering.
              properties:
                crds:
                  description: CRDs holds the information about the underlying CRDs
                    that are offered by this offering.
                  items:
                    description: CRDInformation contains type information about the
                      CRD.
                    properties:
                      apiGroup:
                        type: string
                      kind:
                        type: string
                      name:
                        type: string
                      serviceCluster:
                        description: ServiceCluster references a ServiceClusterReference
                          of this CRD.
                        properties:
                          name:
                            type: string
                        required:
                        - name
                        type: object
                      versions:
                        items:
                          description: CRDVersion holds CRD version specific details.
                          properties:
                            name:
                              description: 'Name of this version, for example: v1,
                                v1alpha1, v1beta1'
                              type: string
                            schema:
                              description: Schema of this CRD version.
                              properties:
                                openAPIV3Schema:
                                  description: openAPIV3Schema is the OpenAPI v3 schema
                                    to use for validation and pruning.
                                  properties:
                                    $ref:
                                      type: string
                                    $schema:
                                      description: JSONSchemaURL represents a schema
                                        url.
                                      type: string
                                    additionalItems:
                                      description: JSONSchemaPropsOrBool represents
                                        JSONSchemaProps or a boolean value. Defaults
                                        to true for the boolean property.
                                      type: object
                                    additionalProperties:
                                      description: JSONSchemaPropsOrBool represents
                                        JSONSchemaProps or a boolean value. Defaults
                                        to true for the boolean property.
                                      type: object
                                    allOf:
                                      items: {}
                                      type: array
                                    anyOf:
                                      items: {}
                                      type: array
                                    default:
                                      description: default is a default value for
                                        undefined object fields. Defaulting is a beta
                                        feature under the CustomResourceDefaulting
                                        feature gate. Defaulting requires spec.preserveUnknownFields
                                        to be false.
                                      x-kubernetes-preserve-unknown-fields: true
                                    definitions:
                                      additionalProperties: {}
                                      description: JSONSchemaDefinitions contains
                                        the models explicitly defined in this spec.
                                      type: object
                                    dependencies:
                                      additionalProperties:
                                        description: JSONSchemaPropsOrStringArray
                                          represents a JSONSchemaProps or a string
                                          array.
                                        type: object
                                      description: JSONSchemaDependencies represent
                                        a dependencies property.
                                      type: object
                                    description:
                                      type: string
                                    enum:
                                      items:
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    example:
                                      x-kubernetes-preserve-unknown-fields: true
                                    exclusiveMaximum:
                                      type: boolean
                                    exclusiveMinimum:
                                      type: boolean
                                    externalDocs:
                                      description: ExternalDocumentation allows referencing
                                        an external resource for extended documentation.
                                      properties:
                                        description:
                                          type: string
                                        url:
                                          type: string
                                      type: object
                                    format:
                                      type: string
                                    id:
                                      type: string
                                    items:
                                      description: JSONSchemaPropsOrArray represents
                                        a value that can either be a JSONSchemaProps
                                        or an array of JSONSchemaProps. Mainly here
                                        for serialization purposes.
                                      type: object
                                    maxItems:
                                      format: int64
                                      type: integer
                                    maxLength:
                                      format: int64
                                      type: integer
                                    maxProperties:
                                      format: int64
                                      type: integer
                                    maximum: {}
                                    minItems:
                                      format: int64
                                      type: integer
                                    minLength:
                                      format: int64
                                      type: integer
                                    minProperties:
                                      format: int64
                                      type: integer
                                    minimum: {}
                                    multipleOf: {}
                                    not: {}
                                    nullable:
                                      type: boolean
                                    oneOf:
                                      items: {}
                                      type: array
                                    pattern:
                                      type: string
                                    patternProperties:
                                      additionalProperties: {}
                                      type: object
                                    properties:
                                      additionalProperties: {}
                                      type: object
                                    required:
                                      items:
                                        type: string
                                      type: array
                                    title:
                                      type: string
                                    type:
                                      type: string
                                    uniqueItems:
                                      type: boolean
                                    x-kubernetes-embedded-resource:
                                      description: x-kubernetes-embedded-resource
                                        defines that the value is an embedded Kubernetes
                                        runtime.Object, with TypeMeta and ObjectMeta.
                                        The type must be object. It is allowed to
                                        further restrict the embedded object. kind,
                                        apiVersion and metadata are validated automatically.
                                        x-kubernetes-preserve-unknown-fields is allowed
                                        to be true, but does not have to be if the
                                        object is fully specified (up to kind, apiVersion,
                                        metadata).
                                      type: boolean
                                    x-kubernetes-int-or-string:
                                      description: "x-kubernetes-int-or-string specifies
                                        that this value is either an integer or a
                                        string. If this is true, an empty type is
                                        allowed and type as child of anyOf is permitted
                                        if following one of the following patterns:
                                        \n 1) anyOf:    - type: integer    - type:
                                        string 2) allOf:    - anyOf:      - type:
                                        integer      - type: string    - ... zero
                                        or more"
                                      type: boolean
                                    x-kubernetes-list-map-keys:
                                      description: "x-kubernetes-list-map-keys annotates
                                        an array with the x-kubernetes-list-type `map`
                                        by specifying the keys used as the index of
                                        the map. \n This tag MUST only be used on
                                        lists that have the \"x-kubernetes-list-type\"
                                        extension set to \"map\". Also, the values
                                        specified for this attribute must be a scalar
                                        typed field of the child structure (no nesting
                                        is supported)."
                                      items:
                                        type: string
                                      type: array
                                    x-kubernetes-list-type:
                                      description: "x-kubernetes-list-type annotates
                                        an array to further describe its topology.
                                        This extension must only be used on lists
                                        and may have 3 possible values: \n 1) `atomic`:
                                        the list is treated as a single entity, like
                                        a scalar.      Atomic lists will be entirely
                                        replaced when updated. This extension      may
                                        be used on any type of list (struct, scalar,
                                        ...). 2) `set`:      Sets are lists that must
                                        not have multiple items with the same value.
                                        Each      value must be a scalar (or another
                                        atomic type). 3) `map`:      These lists are
                                        like maps in that their elements have a non-index
                                        key      used to identify them. Order is preserved
                                        upon merge. The map tag      must only be
                                        used on a list with elements of type object.
                                        Defaults to atomic for arrays."
                                      type: string
                                    x-kubernetes-preserve-unknown-fields:
                                      description: x-kubernetes-preserve-unknown-fields
                                        stops the API server decoding step from pruning
                                        fields which are not specified in the validation
                                        schema. This affects fields recursively, but
                                        switches back to normal pruning behaviour
                                        if nested properties or additionalProperties
                                        are specified in the schema. This can either
                                        be true or undefined. False is forbidden.
                                      type: boolean
                                  type: object
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                          - name
                          type: object
                        type: array
                    required:
                    - apiGroup
                    - kind
                    - name
                    - serviceCluster
                    - versions
                    type: object
                  type: array
                metadata:
                  description: OfferingMetadata contains the metadata (display name,
                    description, etc) of the Offering.
                  properties:
                    description:
                      description: Description shows the human-readable description
                        of this Offering.
                      type: string
                    displayName:
                      description: DisplayName shows the human-readable name of this
                        Offering.
                      type: string
                  type: object
                provider:
                  description: Provider references a ProviderReference of this Offering.
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
              required:
              - crds
              - provider
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: null
    name: kubecarrier-manager-manager-role
  rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - catalogentries
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - catalogentries/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - catalogs
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - catalogs/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - providers
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - providers/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - tenantreferences
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - tenants
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - tenants/status
    verbs:
    - get
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: kubecarrier-manager-manager-rolebinding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: kubecarrier-manager-manager-role
  subjects:
  - kind: ServiceAccount
    name: default
    namespace: test3000
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: kubecarrier-manager-leader-election-role
    namespace: test3000
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - ""
    resources:
    - configmaps/status
    verbs:
    - get
    - update
    - patch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: kubecarrier-manager-leader-election-rolebinding
    namespace: test3000
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: kubecarrier-manager-leader-election-role
  subjects:
  - kind: ServiceAccount
    name: default
    namespace: test3000
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      control-plane: controller-manager
    name: kubecarrier-manager-controller-manager-metrics-service
    namespace: test3000
  spec:
    ports:
    - name: https
      port: 8443
      targetPort: https
    selector:
      control-plane: controller-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: kubecarrier-manager-proxy-role
  rules:
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: kubecarrier-manager-proxy-rolebinding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: kubecarrier-manager-proxy-role
  subjects:
  - kind: ServiceAccount
    name: default
    namespace: test3000
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      control-plane: controller-manager
    name: kubecarrier-manager-controller-manager
    namespace: test3000
  spec:
    replicas: 1
    selector:
      matchLabels:
        control-plane: controller-manager
    template:
      metadata:
        labels:
          control-plane: controller-manager
      spec:
        containers:
        - env:
          - name: KUBECARRIER_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: quay.io/kubecarrier/manager:was not build properly
          name: manager
          resources:
            limits:
              cpu: 100m
              memory: 30Mi
            requests:
              cpu: 100m
              memory: 20Mi
        terminationGracePeriodSeconds: 10
