- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: null
    name: tenants.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      kind: Tenant
      listKind: TenantList
      plural: tenants
      shortNames:
      - tn
      singular: tenant
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.phase
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Tenant sets up permissions and references to allow a end-user
            group to interact with providers' services.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: TenantSpec defines the desired state of Tenant.
              type: object
            status:
              description: TenantStatus defines the observed state of Tenant.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of a Tenant's current state.
                  items:
                    description: TenantCondition contains details for the current
                      condition of this Tenant.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transits from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is the human readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is the (brief) reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status is the status of the condition, one of
                          ('True', 'False', 'Unknown').
                        type: string
                      type:
                        description: Type is the type of the Tenant condition, currently
                          ('Ready').
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                namespaceName:
                  description: NamespaceName is the name of the namespace that the
                    Tenant manages.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the most recent generation observed
                    for this Tenant by the controller.
                  format: int64
                  type: integer
                phase:
                  description: DEPRECATED. Phase represents the current lifecycle
                    state of this object. Consider this field DEPRECATED, it will
                    be removed as soon as there is a mechanism to map conditions to
                    strings when printing the property. This is only for display purpose,
                    for everything else use conditions.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: null
    name: providers.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      kind: Provider
      listKind: ProviderList
      plural: providers
      shortNames:
      - pdr
      singular: provider
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.namespaceName
        name: Provider Namespace
        type: string
      - jsonPath: .spec.displayName
        name: Display Name
        type: string
      - jsonPath: .status.phase
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Provider is the service provider representation in the KubeCarrier
            control-plane.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ProviderSpec defines the desired state of Provider.
              properties:
                metadata:
                  description: ProviderMetadata contains the metadata (display name,
                    description, etc) of the Provider.
                  properties:
                    description:
                      description: Description shows the human-readable description
                        of this Provider.
                      type: string
                    displayName:
                      description: DisplayName shows the human-readable name of this
                        Provider.
                      type: string
                  type: object
              type: object
            status:
              description: ProviderStatus defines the observed state of Provider.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of a Provider's current state.
                  items:
                    description: ProviderCondition contains details for the current
                      condition of this Provider.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transits from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is the human readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is the (brief) reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status is the status of the condition, one of
                          ('True', 'False', 'Unknown').
                        type: string
                      type:
                        description: Type is the type of the Provider condition, currently
                          ('Ready').
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                namespaceName:
                  description: NamespaceName is the name of the namespace that the
                    Provider manages.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the most recent generation observed
                    for this Provider by the controller.
                  format: int64
                  type: integer
                phase:
                  description: DEPRECATED. Phase represents the current lifecycle
                    state of this object. Consider this field DEPRECATED, it will
                    be removed as soon as there is a mechanism to map conditions to
                    strings when printing the property. This is only for display purpose,
                    for everything else use conditions.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: null
    name: tenantreferences.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      kind: TenantReference
      listKind: TenantReferenceList
      plural: tenantreferences
      shortNames:
      - tr
      singular: tenantreference
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TenantReference is a read-only object exposing the Tenant information.
            TenantReference lives in the provider's namespace. The provider is allowed
            modifying TenantReference's labels, marking them at will. This allows
            the tenant granular tenant selection for the offered services catalogs.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: TenantReferenceSpec defines the desired state of TenantReference
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: null
    name: catalogentries.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      kind: CatalogEntry
      listKind: CatalogEntryList
      plural: catalogentries
      shortNames:
      - ce
      singular: catalogentry
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: CatalogEntry adds additional metadata to a set of CRD's and
            groups the same Kind for multiple ServiceClusters
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: CatalogEntrySpec defines the desired state of CatalogEntry
              properties:
                crdSelector:
                  description: CRDSelector selects CRD objects that should be part
                    of this catalog.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                metadata:
                  description: Metadata contains the metadata (display name, description,
                    etc) of the CatalogEntry.
                  properties:
                    description:
                      description: Description shows the human-readable description
                        of this CatalogEntry.
                      type: string
                    displayName:
                      description: DisplayName shows the human-readable name of this
                        CatalogEntry.
                      type: string
                  type: object
              type: object
            status:
              description: CatalogEntryStatus defines the observed state of CatalogEntry.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of a CatalogEntry's current state.
                  items:
                    description: CatalogEntryCondition contains details for the current
                      condition of this CatalogEntry.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transits from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is the human readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is the (brief) reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status is the status of the condition, one of
                          ('True', 'False', 'Unknown').
                        type: string
                      type:
                        description: Type is the type of the CatalogEntry condition,
                          currently ('Ready').
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                crds:
                  description: CRDs holds the information about the underlying CRDs
                    that are offered by this CatalogEntry.
                  items:
                    description: CRDInformation contains type information about the
                      CRD.
                    properties:
                      apiGroup:
                        type: string
                      kind:
                        type: string
                      name:
                        type: string
                      serviceCluster:
                        description: ServiceCluster references a ServiceClusterReference
                          of this CRD.
                        properties:
                          name:
                            type: string
                        required:
                        - name
                        type: object
                      versions:
                        items:
                          description: CRDVersion holds CRD version specific details.
                          properties:
                            name:
                              description: 'Name of this version, for example: v1,
                                v1alpha1, v1beta1'
                              type: string
                            schema:
                              description: Schema of this CRD version.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                          - name
                          type: object
                        type: array
                    required:
                    - apiGroup
                    - kind
                    - name
                    - serviceCluster
                    - versions
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the most recent generation observed
                    for this CatalogEntry by the controller.
                  format: int64
                  type: integer
                phase:
                  description: DEPRECATED. Phase represents the current lifecycle
                    state of this object. Consider this field DEPRECATED, it will
                    be removed as soon as there is a mechanism to map conditions to
                    strings when printing the property. This is only for display purpose,
                    for everything else use conditions.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: null
    name: catalogs.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      kind: Catalog
      listKind: CatalogList
      plural: catalogs
      shortNames:
      - cl
      singular: catalog
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.phase
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Catalog publishes a selection of CatalogEntries to a selection
            of Tenants.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: CatalogSpec defines the desired state of Catalog
              properties:
                catalogEntrySelector:
                  description: CatalogEntrySelector selects CatalogEntry objects that
                    should be part of this catalog. If this is not specified, it will
                    match all CatalogEntries.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                tenantReferenceSelector:
                  description: TenantReferenceSelector selects TenantReference objects
                    that the catalog should be published to. If this is not specified,
                    it will match all TenantReferences.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
              type: object
            status:
              description: CatalogStatus defines the observed state of Catalog.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of a Catalog's current state.
                  items:
                    description: CatalogCondition contains details for the current
                      condition of this Catalog.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transits from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is the human readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is the (brief) reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status is the status of the condition, one of
                          ('True', 'False', 'Unknown').
                        type: string
                      type:
                        description: Type is the type of the Catalog condition, currently
                          ('Ready').
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                entries:
                  description: Entries is the list of the CatalogEntries that selected
                    by this Catalog.
                  items:
                    description: ObjectReference describes the link to another object
                      in the same namespace.
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the most recent generation observed
                    for this Catalog by the controller.
                  format: int64
                  type: integer
                phase:
                  description: DEPRECATED. Phase represents the current lifecycle
                    state of this object. Consider this field DEPRECATED, it will
                    be removed as soon as there is a mechanism to map conditions to
                    strings when printing the property. This is only for display purpose,
                    for everything else use conditions.
                  type: string
                tenants:
                  description: Tenants is the list of the Tenants(TenantReference)
                    that selected by this Catalog.
                  items:
                    description: ObjectReference describes the link to another object
                      in the same namespace.
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: null
    name: offerings.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      kind: Offering
      listKind: OfferingList
      plural: offerings
      singular: offering
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .offering.displayName
        name: Display Name
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Offering is used for Tenants to discover services that have
            been made available to them.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            offering:
              description: OfferingData defines the data (metadata, provider, crds,
                etc.) of Offering.
              properties:
                crds:
                  description: CRDs holds the information about the underlying CRDs
                    that are offered by this offering.
                  items:
                    description: CRDInformation contains type information about the
                      CRD.
                    properties:
                      apiGroup:
                        type: string
                      kind:
                        type: string
                      name:
                        type: string
                      serviceCluster:
                        description: ServiceCluster references a ServiceClusterReference
                          of this CRD.
                        properties:
                          name:
                            type: string
                        required:
                        - name
                        type: object
                      versions:
                        items:
                          description: CRDVersion holds CRD version specific details.
                          properties:
                            name:
                              description: 'Name of this version, for example: v1,
                                v1alpha1, v1beta1'
                              type: string
                            schema:
                              description: Schema of this CRD version.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                          - name
                          type: object
                        type: array
                    required:
                    - apiGroup
                    - kind
                    - name
                    - serviceCluster
                    - versions
                    type: object
                  type: array
                metadata:
                  description: OfferingMetadata contains the metadata (display name,
                    description, etc) of the Offering.
                  properties:
                    description:
                      description: Description shows the human-readable description
                        of this Offering.
                      type: string
                    displayName:
                      description: DisplayName shows the human-readable name of this
                        Offering.
                      type: string
                  type: object
                provider:
                  description: Provider references a ProviderReference of this Offering.
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
              required:
              - provider
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: null
    name: providerreferences.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      kind: ProviderReference
      listKind: ProviderReferenceList
      plural: providerreferences
      shortNames:
      - pr
      singular: providerreference
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.metadata.displayName
        name: Display Name
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ProviderReference exposes information of the Provider(displayName,
            description). This object lives in the tenant namespace for each provider
            the tenant is allowed utilizing (e.g. there's catalog selecting this tenant
            as its user)
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ProviderReferenceSpec defines the desired state of ProviderReference
              properties:
                metadata:
                  description: Metadata contains the metadata (display name, description,
                    etc) of the Provider.
                  properties:
                    description:
                      description: Description shows the human-readable description
                        of this Provider.
                      type: string
                    displayName:
                      description: DisplayName shows the human-readable name of this
                        Provider.
                      type: string
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: null
    name: serviceclusters.kubecarrier.io
  spec:
    group: kubecarrier.io
    names:
      kind: ServiceCluster
      listKind: ServiceClusterList
      plural: serviceclusters
      shortNames:
      - sc
      singular: servicecluster
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.phase
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - jsonPath: .spec.metadata.displayName
        name: Display Name
        type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ServiceCluster is a providers Kubernetes Cluster.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ServiceClusterSpec defines the desired state of ServiceCluster
              properties:
                metadata:
                  description: ServiceClusterMetadata contains the metadata (display
                    name, description, etc) of the ServiceCluster.
                  properties:
                    description:
                      description: Description shows the human-readable description
                        of this ServiceCluster.
                      type: string
                    displayName:
                      description: DisplayName shows the human-readable name of this
                        ServiceCluster.
                      type: string
                  type: object
              type: object
            status:
              description: ServiceClusterStatus defines the observed state of ServiceCluster
              properties:
                conditions:
                  description: Conditions is a list of all conditions this ServiceCluster
                    is in.
                  items:
                    description: ServiceClusterCondition contains details for the
                      current condition of this ServiceCluster.
                    properties:
                      lastHeartbeatTime:
                        description: LastHeartbeatTime is the timestamp corresponding
                          to the last update of this condition.
                        format: date-time
                        type: string
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transit from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is the human readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is the (brief) reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status of the condition, one of ('True', 'False',
                          'Unknown').
                        type: string
                      type:
                        description: Type of the condition, currently ('Ready').
                        type: string
                    required:
                    - lastHeartbeatTime
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                observedGeneration:
                  description: The most recent generation observed by the controller.
                  format: int64
                  type: integer
                phase:
                  description: DEPRECATED. Phase represents the current lifecycle
                    state of this object consider this field DEPRECATED, it will be
                    removed as soon as there is a mechanism to map conditions to a
                    string when printing the property is only present for display
                    purposes, for everything else use conditions
                  type: string
                version:
                  description: Version of the service cluster API Server
                  properties:
                    buildDate:
                      type: string
                    compiler:
                      type: string
                    gitCommit:
                      type: string
                    gitTreeState:
                      type: string
                    gitVersion:
                      type: string
                    goVersion:
                      type: string
                    major:
                      type: string
                    minor:
                      type: string
                    platform:
                      type: string
                  required:
                  - buildDate
                  - compiler
                  - gitCommit
                  - gitTreeState
                  - gitVersion
                  - goVersion
                  - major
                  - minor
                  - platform
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: null
    name: derivedcustomresourcedefinitions.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      kind: DerivedCustomResourceDefinition
      listKind: DerivedCustomResourceDefinitionList
      plural: derivedcustomresourcedefinitions
      shortNames:
      - dcrd
      singular: derivedcustomresourcedefinition
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.phase
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: DerivedCustomResourceDefinition derives a new CRD from a existing
            one.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: DerivedCustomResourceDefinitionSpec defines the desired
                state of DerivedCustomResourceDefinition.
              properties:
                baseCRD:
                  description: CRD that should be used as a base to derive a new CRD
                    from.
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                expose:
                  description: controls which fields will be present in the derived
                    CRD.
                  items:
                    description: VersionExposeConfig specifies which fields to expose
                      in the derived CRD.
                    properties:
                      fields:
                        description: specifies the fields that should be present in
                          the derived CRD.
                        items:
                          description: FieldPath is specifying how to address a certain
                            field.
                          properties:
                            jsonPath:
                              description: JSONPath e.g. .spec.somefield.somesubfield
                              type: string
                          required:
                          - jsonPath
                          type: object
                        type: array
                      versions:
                        description: specifies the versions of the referenced CRD,
                          that this expose config applies to. The same version may
                          not be specified in multiple VersionExposeConfigs.
                        items:
                          type: string
                        type: array
                    required:
                    - fields
                    - versions
                    type: object
                  type: array
                kindOverride:
                  description: overrides the kind of the derived CRD.
                  type: string
              required:
              - baseCRD
              - expose
              type: object
            status:
              description: DerivedCustomResourceDefinitionStatus defines the observed
                state of DerivedCustomResourceDefinition.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of a DerivedCustomResourceDefinition's current state.
                  items:
                    description: DerivedCustomResourceDefinitionCondition contains
                      details for the current condition of this DerivedCustomResourceDefinition.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transits from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is the human readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is the (brief) reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status is the status of the condition, one of
                          ('True', 'False', 'Unknown').
                        type: string
                      type:
                        description: Type is the type of the DerivedCustomResourceDefinition
                          condition, currently ('Ready').
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                derivedCRD:
                  description: DerivedCRD holds information about the derived CRD.
                  properties:
                    group:
                      description: API Group of the derived CRD.
                      type: string
                    kind:
                      type: string
                    name:
                      description: Name of the derived CRD.
                      type: string
                    plural:
                      type: string
                    singular:
                      type: string
                  required:
                  - group
                  - kind
                  - name
                  - plural
                  - singular
                  type: object
                observedGeneration:
                  description: ObservedGeneration is the most recent generation observed
                    for this DerivedCustomResourceDefinition by the controller.
                  format: int64
                  type: integer
                phase:
                  description: DEPRECATED. Phase represents the current lifecycle
                    state of this object. Consider this field DEPRECATED, it will
                    be removed as soon as there is a mechanism to map conditions to
                    strings when printing the property. This is only for display purpose,
                    for everything else use conditions.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    creationTimestamp: null
    name: serviceclusterreferences.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      kind: ServiceClusterReference
      listKind: ServiceClusterReferenceList
      plural: serviceclusterreferences
      shortNames:
      - scr
      singular: serviceclusterreference
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.provider.name
        name: Provider
        type: string
      - jsonPath: .spec.metadata.displayName
        name: Display Name
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: "ServiceClusterReference exposes information about a Providers
            Clusters. \n This object lives in the tenant namespace for each provider
            the tenant is allowed utilizing (e.g. there's catalog selecting this tenant
            as its user)"
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ServiceClusterReferenceSpec defines the desired state of
                ServiceClusterReference
              properties:
                metadata:
                  description: Metadata contains the metadata (display name, description,
                    etc) of the ServiceCluster.
                  properties:
                    description:
                      description: Description shows the human-readable description
                        of this ServiceCluster.
                      type: string
                    displayName:
                      description: DisplayName shows the human-readable name of this
                        ServiceCluster.
                      type: string
                  type: object
                provider:
                  description: Provider references the Provider that this ServiceCluster
                    belongs to.
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
              required:
              - provider
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: null
    name: kubecarrier-manager-manager-role
  rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - catalogentries
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - catalogentries/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - catalogs
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - catalogs/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - derivedcustomresourcedefinitions
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - derivedcustomresourcedefinitions/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - offerings
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - providerreferences
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - providers
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - providers/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - serviceclusterreferences
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - tenantreferences
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - tenants
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - tenants/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - kubecarrier.io
    resources:
    - serviceclusters
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: kubecarrier-manager-manager-rolebinding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: kubecarrier-manager-manager-role
  subjects:
  - kind: ServiceAccount
    name: default
    namespace: test3000
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: kubecarrier-manager-leader-election-role
    namespace: test3000
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - ""
    resources:
    - configmaps/status
    verbs:
    - get
    - update
    - patch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: kubecarrier-manager-leader-election-rolebinding
    namespace: test3000
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: kubecarrier-manager-leader-election-role
  subjects:
  - kind: ServiceAccount
    name: default
    namespace: test3000
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      control-plane: controller-manager
    name: kubecarrier-manager-controller-manager
    namespace: test3000
  spec:
    replicas: 1
    selector:
      matchLabels:
        control-plane: controller-manager
    template:
      metadata:
        labels:
          control-plane: controller-manager
      spec:
        containers:
        - env:
          - name: KUBECARRIER_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: quay.io/kubecarrier/manager:was not build properly
          name: manager
          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 30Mi
            requests:
              cpu: 100m
              memory: 20Mi
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
        terminationGracePeriodSeconds: 10
        volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
- apiVersion: v1
  kind: Service
  metadata:
    name: kubecarrier-manager-webhook-service
    namespace: test3000
  spec:
    ports:
    - port: 443
      targetPort: 9443
    selector:
      control-plane: controller-manager
- apiVersion: cert-manager.io/v1alpha2
  kind: Issuer
  metadata:
    name: kubecarrier-manager-selfsigned-issuer
    namespace: test3000
  spec:
    selfSigned: {}
- apiVersion: cert-manager.io/v1alpha2
  kind: Certificate
  metadata:
    name: kubecarrier-manager-serving-cert
    namespace: test3000
  spec:
    dnsNames:
    - kubecarrier-manager-webhook-service.test3000.svc
    - kubecarrier-manager-webhook-service.test3000.svc.cluster.local
    issuerRef:
      kind: Issuer
      name: kubecarrier-manager-selfsigned-issuer
    secretName: webhook-server-cert
