- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: test3000/kubecarrier-manager-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.5
    creationTimestamp: null
    labels:
      kubecarrier.io/role: manager
    name: accounts.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      categories:
      - kubecarrier-admin
      kind: Account
      listKind: AccountList
      plural: accounts
      shortNames:
      - acc
      singular: account
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.namespace.name
        name: Account Namespace
        type: string
      - jsonPath: .spec.metadata.displayName
        name: Display Name
        type: string
      - jsonPath: .status.phase
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: "Account represents an actor in KubeCarrier. Depending on it's
            roles, it can provide services, consume offered services or both. \n KubeCarrier
            creates a new Namespace for each Account. The Account Metadata is exposed
            to users that are offered services from this Account. \n **Example** ```yaml
            apiVersion: catalog.kubecarrier.io/v1alpha1 kind: Account metadata:   name:
            team-a spec:   metadata:     displayName: The A Team     description:
            In 1972, a crack commando unit was sent to prison by a military court...
            \  roles:   - Provider   - Tenant ```"
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AccountSpec describes the desired state of Account.
              properties:
                metadata:
                  description: "Metadata\tcontains additional human readable account
                    details."
                  properties:
                    description:
                      description: Description is the human-readable description of
                        this Account.
                      minLength: 1
                      type: string
                    displayName:
                      description: DisplayName is the human-readable name of this
                        Account.
                      minLength: 1
                      type: string
                  type: object
                roles:
                  description: Roles this account uses.
                  items:
                    description: AccountRole type represents available Account roles.
                    enum:
                    - Provider
                    - Tenant
                    type: string
                  minItems: 1
                  type: array
                subjects:
                  description: Subjects holds references to the objects that manged
                    RBAC roles should apply to.
                  items:
                    description: Subject contains a reference to the object or user
                      identities a role binding applies to.  This can either hold
                      a direct API object reference, or a value for non-objects such
                      as user and group names.
                    properties:
                      apiGroup:
                        description: APIGroup holds the API group of the referenced
                          subject. Defaults to "" for ServiceAccount subjects. Defaults
                          to "rbac.authorization.k8s.io" for User and Group subjects.
                        type: string
                      kind:
                        description: Kind of object being referenced. Values defined
                          by this API group are "User", "Group", and "ServiceAccount".
                          If the Authorizer does not recognized the kind value, the
                          Authorizer should report an error.
                        type: string
                      name:
                        description: Name of the object being referenced.
                        type: string
                      namespace:
                        description: Namespace of the referenced object.  If the object
                          kind is non-namespace, such as "User" or "Group", and this
                          value is not empty the Authorizer should report an error.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  minItems: 1
                  type: array
              required:
              - roles
              type: object
            status:
              description: AccountStatus represents the observed state of Account.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of a Account's current state.
                  items:
                    description: AccountCondition contains details for the current
                      condition of this Account.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transits from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is the human readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is the (brief) reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status is the status of the condition, one of
                          ('True', 'False', 'Unknown').
                        type: string
                      type:
                        description: Type is the type of the Account condition, currently
                          ('Ready').
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                namespace:
                  description: NamespaceName is the name of the Namespace that the
                    Account manages.
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                observedGeneration:
                  description: ObservedGeneration is the most recent generation observed
                    for this Account by the controller.
                  format: int64
                  type: integer
                phase:
                  description: DEPRECATED. Phase represents the current lifecycle
                    state of this object. Consider this field DEPRECATED, it will
                    be removed as soon as there is a mechanism to map conditions to
                    strings when printing the property. This is only for display purpose,
                    for everything else use conditions.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: test3000/kubecarrier-manager-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.5
    creationTimestamp: null
    labels:
      kubecarrier.io/role: manager
    name: catalogentries.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      categories:
      - kubecarrier-provider
      kind: CatalogEntry
      listKind: CatalogEntryList
      plural: catalogentries
      shortNames:
      - ce
      singular: catalogentry
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.phase
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: "CatalogEntry controls how to offer a CRD to other Tenants.
            \n A CatalogEntry references a single CRD, adds metadata to it and allows
            to limit field access for Tenants. \n **Simple Example** ```yaml apiVersion:
            catalog.kubecarrier.io/v1alpha1 kind: CatalogEntry metadata:   name: couchdbs.eu-west-1
            spec:   metadata:     displayName: CouchDB     description: The compfy
            database   baseCRD:     name: couchdbs.eu-west-1.loodse ``` \n **Example
            with limited fields** ```yaml apiVersion: catalog.kubecarrier.io/v1alpha1
            kind: CatalogEntry metadata:   name: couchdbs.eu-west-1 spec:   metadata:
            \    displayName: CouchDB     description: The compfy database   baseCRD:
            \    name: couchdbs.eu-west-1.loodse   derive:     kindOverride: CouchDBPublic
            \    expose:     - versions:       - v1alpha1       fields:       - jsonPath:
            .spec.username       - jsonPath: .spec.password       - jsonPath: .status.phase
            \      - jsonPath: .status.fauxtonAddress       - jsonPath: .status.address
            \      - jsonPath: .status.observedGeneration ```"
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: CatalogEntrySpec describes the desired state of CatalogEntry.
              properties:
                baseCRD:
                  description: BaseCRD is the underlying BaseCRD objects that this
                    CatalogEntry refers to.
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                derive:
                  description: Derive contains the configuration to generate DerivedCustomResource
                    from the BaseCRD of this CatalogEntry.
                  properties:
                    expose:
                      description: controls which fields will be present in the derived
                        CRD.
                      items:
                        description: VersionExposeConfig specifies which fields to
                          expose in the derived CRD.
                        properties:
                          fields:
                            description: specifies the fields that should be present
                              in the derived CRD.
                            items:
                              description: FieldPath is specifying how to address
                                a certain field.
                              properties:
                                jsonPath:
                                  description: JSONPath e.g. .spec.somefield.somesubfield
                                  type: string
                              required:
                              - jsonPath
                              type: object
                            type: array
                          versions:
                            description: specifies the versions of the referenced
                              CRD, that this expose config applies to. The same version
                              may not be specified in multiple VersionExposeConfigs.
                            items:
                              type: string
                            type: array
                        required:
                        - fields
                        - versions
                        type: object
                      type: array
                    kindOverride:
                      description: overrides the kind of the derived CRD.
                      type: string
                  required:
                  - expose
                  type: object
                metadata:
                  description: Metadata contains the metadata of the CatalogEntry
                    for the Service Catalog.
                  properties:
                    description:
                      description: Description shows the human-readable description
                        of this CatalogEntry.
                      type: string
                    displayName:
                      description: DisplayName shows the human-readable name of this
                        CatalogEntry.
                      type: string
                  type: object
              type: object
            status:
              description: CatalogEntryStatus represents the observed state of CatalogEntry.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of a CatalogEntry's current state.
                  items:
                    description: CatalogEntryCondition contains details for the current
                      condition of this CatalogEntry.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transits from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is the human readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is the (brief) reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status is the status of the condition, one of
                          ('True', 'False', 'Unknown').
                        type: string
                      type:
                        description: Type is the type of the CatalogEntry condition,
                          currently ('Ready').
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the most recent generation observed
                    for this CatalogEntry by the controller.
                  format: int64
                  type: integer
                phase:
                  description: DEPRECATED. Phase represents the current lifecycle
                    state of this object. Consider this field DEPRECATED, it will
                    be removed as soon as there is a mechanism to map conditions to
                    strings when printing the property. This is only for display purpose,
                    for everything else use conditions.
                  type: string
                providerCRD:
                  description: ProviderCRD holds the information about the Provider
                    facing CRD that is offered by this CatalogEntry.
                  properties:
                    apiGroup:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                    plural:
                      type: string
                    serviceCluster:
                      description: ServiceCluster references a ServiceClusterReference
                        of this CRD.
                      properties:
                        name:
                          type: string
                      required:
                      - name
                      type: object
                    versions:
                      items:
                        description: CRDVersion holds CRD version specific details.
                        properties:
                          name:
                            description: 'Name of this version, for example: v1, v1alpha1,
                              v1beta1'
                            type: string
                          schema:
                            description: Schema of this CRD version.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        required:
                        - name
                        type: object
                      type: array
                  required:
                  - apiGroup
                  - kind
                  - name
                  - plural
                  - serviceCluster
                  - versions
                  type: object
                tenantCRD:
                  description: TenantCRD holds the information about the Tenant facing
                    CRD that is offered by this CatalogEntry.
                  properties:
                    apiGroup:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                    plural:
                      type: string
                    serviceCluster:
                      description: ServiceCluster references a ServiceClusterReference
                        of this CRD.
                      properties:
                        name:
                          type: string
                      required:
                      - name
                      type: object
                    versions:
                      items:
                        description: CRDVersion holds CRD version specific details.
                        properties:
                          name:
                            description: 'Name of this version, for example: v1, v1alpha1,
                              v1beta1'
                            type: string
                          schema:
                            description: Schema of this CRD version.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        required:
                        - name
                        type: object
                      type: array
                  required:
                  - apiGroup
                  - kind
                  - name
                  - plural
                  - serviceCluster
                  - versions
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.5
    creationTimestamp: null
    labels:
      kubecarrier.io/role: manager
    name: catalogentrysets.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      categories:
      - kubecarrier-provider
      kind: CatalogEntrySet
      listKind: CatalogEntrySetList
      plural: catalogentrysets
      shortNames:
      - ces
      singular: catalogentryset
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.phase
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: "CatalogEntrySet manages a CustomResourceDiscoverySet and creates
            CatalogEntries for each CRD discovered from the selected ServiceClusters.
            \n **Example** See CatalogEntry documentation for more configuration details.
            ```yaml apiVersion: catalog.kubecarrier.io/v1alpha1 kind: CatalogEntrySet
            metadata:   name: couchdbs spec:   metadata:     displayName: CouchDB
            \    description: The compfy database   discoverySet:     crd:       name:
            couchdbs.couchdb.io     serviceClusterSelector: {} ```"
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: CatalogEntrySetSpec defines the desired state of CatalogEntrySet.
              properties:
                derive:
                  description: Derive contains the configuration to generate DerivedCustomResources
                    from the BaseCRDs that are selected by this CatalogEntrySet.
                  properties:
                    expose:
                      description: controls which fields will be present in the derived
                        CRD.
                      items:
                        description: VersionExposeConfig specifies which fields to
                          expose in the derived CRD.
                        properties:
                          fields:
                            description: specifies the fields that should be present
                              in the derived CRD.
                            items:
                              description: FieldPath is specifying how to address
                                a certain field.
                              properties:
                                jsonPath:
                                  description: JSONPath e.g. .spec.somefield.somesubfield
                                  type: string
                              required:
                              - jsonPath
                              type: object
                            type: array
                          versions:
                            description: specifies the versions of the referenced
                              CRD, that this expose config applies to. The same version
                              may not be specified in multiple VersionExposeConfigs.
                            items:
                              type: string
                            type: array
                        required:
                        - fields
                        - versions
                        type: object
                      type: array
                    kindOverride:
                      description: overrides the kind of the derived CRD.
                      type: string
                  required:
                  - expose
                  type: object
                discoverySet:
                  description: DiscoverySet contains the configuration to create a
                    CustomResourceDiscoverySet.
                  properties:
                    crd:
                      description: CRD references a CustomResourceDefinition within
                        the ServiceCluster.
                      properties:
                        name:
                          type: string
                      required:
                      - name
                      type: object
                    kindOverride:
                      description: KindOverride overrides resulting internal CRDs
                        kind
                      type: string
                    serviceClusterSelector:
                      description: ServiceClusterSelector references a set of ServiceClusters
                        to search the CustomResourceDefinition on.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                    webhookStrategy:
                      default: None
                      description: 'WebhookStrategy configs the webhook of the CRD
                        which is registered in the management cluster by CustomResourceDiscovery
                        object. There are two possible values for this configuration
                        {None (by default), ServiceCluster} None (by default): Webhook
                        will only check if there is an available ServiceClusterAssignment
                        in the current Namespace. ServiceCluster: Webhook will call
                        webhooks of the CRD in the ServiceCluster with dry-run flag.'
                      enum:
                      - None
                      - ServiceCluster
                      type: string
                  required:
                  - crd
                  - serviceClusterSelector
                  type: object
                metadata:
                  description: Metadata contains the metadata of each CatalogEntry
                    for the Service Catalog.
                  properties:
                    description:
                      description: Description shows the human-readable description
                        of this CatalogEntrySet.
                      type: string
                    displayName:
                      description: DisplayName shows the human-readable name of this
                        CatalogEntrySet.
                      type: string
                  type: object
              required:
              - discoverySet
              type: object
            status:
              description: CatalogEntrySetStatus defines the observed state of CatalogEntrySet.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of a CatalogEntrySet's current state.
                  items:
                    description: CatalogEntrySetCondition contains details for the
                      current condition of this CatalogEntrySet.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transits from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is the human readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is the (brief) reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status is the status of the condition, one of
                          ('True', 'False', 'Unknown').
                        type: string
                      type:
                        description: Type is the type of the CatalogEntrySet condition,
                          currently ('Ready').
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the most recent generation observed
                    for this CatalogEntrySet by the controller.
                  format: int64
                  type: integer
                phase:
                  description: DEPRECATED. Phase represents the current lifecycle
                    state of this object. Consider this field DEPRECATED, it will
                    be removed as soon as there is a mechanism to map conditions to
                    strings when printing the property. This is only for display purpose,
                    for everything else use conditions.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.5
    creationTimestamp: null
    labels:
      kubecarrier.io/role: manager
    name: catalogs.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      categories:
      - kubecarrier-provider
      kind: Catalog
      listKind: CatalogList
      plural: catalogs
      shortNames:
      - cl
      singular: catalog
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.phase
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: "Catalog publishes a selection of CatalogEntries to a selection
            of Tenants. \n KubeCarrier will automatically create ServiceClusterAssignment
            objects for each Tenant selected by the Catalog. \n **Example** ```yaml
            apiVersion: catalog.kubecarrier.io/v1alpha1 kind: Catalog metadata:   name:
            default spec:   tenantSelector: {}   catalogEntrySelector: {} ```"
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: CatalogSpec describes the desired contents of a Catalog.
              properties:
                catalogEntrySelector:
                  description: CatalogEntrySelector selects CatalogEntry objects that
                    should be part of this catalog.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                tenantSelector:
                  description: TenantSelector selects Tenant objects that the catalog
                    should be published to.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
              type: object
            status:
              description: CatalogStatus represents the observed state of Catalog.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of a Catalog's current state.
                  items:
                    description: CatalogCondition contains details for the current
                      condition of this Catalog.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transits from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is the human readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is the (brief) reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status is the status of the condition, one of
                          ('True', 'False', 'Unknown').
                        type: string
                      type:
                        description: Type is the type of the Catalog condition, currently
                          ('Ready').
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                entries:
                  description: Entries is the list of the CatalogEntries that selected
                    by this Catalog.
                  items:
                    description: ObjectReference describes the link to another object
                      in the same namespace.
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the most recent generation observed
                    for this Catalog by the controller.
                  format: int64
                  type: integer
                phase:
                  description: DEPRECATED. Phase represents the current lifecycle
                    state of this object. Consider this field DEPRECATED, it will
                    be removed as soon as there is a mechanism to map conditions to
                    strings when printing the property. This is only for display purpose,
                    for everything else use conditions.
                  type: string
                tenants:
                  description: Tenants is the list of the Tenants(Tenant) that selected
                    by this Catalog.
                  items:
                    description: ObjectReference describes the link to another object
                      in the same namespace.
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: test3000/kubecarrier-manager-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.5
    creationTimestamp: null
    labels:
      kubecarrier.io/role: manager
    name: derivedcustomresources.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      categories:
      - kubecarrier-provider
      kind: DerivedCustomResource
      listKind: DerivedCustomResourceList
      plural: derivedcustomresources
      shortNames:
      - dcr
      singular: derivedcustomresource
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.baseCRD.name
        name: Base CRD
        type: string
      - jsonPath: .status.phase
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: DerivedCustomResource derives a new CRD from a existing one.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: DerivedCustomResourceSpec defines the desired state of
                DerivedCustomResource.
              properties:
                baseCRD:
                  description: CRD that should be used as a base to derive a new CRD
                    from.
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                expose:
                  description: controls which fields will be present in the derived
                    CRD.
                  items:
                    description: VersionExposeConfig specifies which fields to expose
                      in the derived CRD.
                    properties:
                      fields:
                        description: specifies the fields that should be present in
                          the derived CRD.
                        items:
                          description: FieldPath is specifying how to address a certain
                            field.
                          properties:
                            jsonPath:
                              description: JSONPath e.g. .spec.somefield.somesubfield
                              type: string
                          required:
                          - jsonPath
                          type: object
                        type: array
                      versions:
                        description: specifies the versions of the referenced CRD,
                          that this expose config applies to. The same version may
                          not be specified in multiple VersionExposeConfigs.
                        items:
                          type: string
                        type: array
                    required:
                    - fields
                    - versions
                    type: object
                  type: array
                kindOverride:
                  description: overrides the kind of the derived CRD.
                  type: string
              required:
              - baseCRD
              - expose
              type: object
            status:
              description: DerivedCustomResourceStatus defines the observed state
                of DerivedCustomResource.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of a DerivedCustomResource's current state.
                  items:
                    description: DerivedCustomResourceCondition contains details for
                      the current condition of this DerivedCustomResource.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transits from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is the human readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is the (brief) reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status is the status of the condition, one of
                          ('True', 'False', 'Unknown').
                        type: string
                      type:
                        description: Type is the type of the DerivedCustomResource
                          condition, currently ('Ready').
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                derivedCR:
                  description: DerivedCR holds information about the derived CRD.
                  properties:
                    group:
                      description: API Group of the derived CRD.
                      type: string
                    kind:
                      type: string
                    name:
                      description: Name of the derived CRD.
                      type: string
                    plural:
                      type: string
                    singular:
                      type: string
                  required:
                  - group
                  - kind
                  - name
                  - plural
                  - singular
                  type: object
                observedGeneration:
                  description: ObservedGeneration is the most recent generation observed
                    for this DerivedCustomResource by the controller.
                  format: int64
                  type: integer
                phase:
                  description: DEPRECATED. Phase represents the current lifecycle
                    state of this object. Consider this field DEPRECATED, it will
                    be removed as soon as there is a mechanism to map conditions to
                    strings when printing the property. This is only for display purpose,
                    for everything else use conditions.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: test3000/kubecarrier-manager-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.5
    creationTimestamp: null
    labels:
      kubecarrier.io/role: manager
    name: offerings.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      categories:
      - kubecarrier-tenant
      kind: Offering
      listKind: OfferingList
      plural: offerings
      shortNames:
      - "off"
      singular: offering
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .offering.metadata.displayName
        name: Display Name
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: "Offering is used for Tenants to discover services that have
            been made available to them. \n Offering objects are created automatically
            by KubeCarrier in Account namespaces, that have a service offered to them
            via a Catalog."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            offering:
              description: OfferingData defines the data (metadata, provider, crds,
                etc.) of Offering.
              properties:
                crd:
                  description: CRD holds the information about the underlying CRD
                    that is offered by this offering.
                  properties:
                    apiGroup:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                    plural:
                      type: string
                    serviceCluster:
                      description: ServiceCluster references a ServiceClusterReference
                        of this CRD.
                      properties:
                        name:
                          type: string
                      required:
                      - name
                      type: object
                    versions:
                      items:
                        description: CRDVersion holds CRD version specific details.
                        properties:
                          name:
                            description: 'Name of this version, for example: v1, v1alpha1,
                              v1beta1'
                            type: string
                          schema:
                            description: Schema of this CRD version.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        required:
                        - name
                        type: object
                      type: array
                  required:
                  - apiGroup
                  - kind
                  - name
                  - plural
                  - serviceCluster
                  - versions
                  type: object
                metadata:
                  description: OfferingMetadata contains the metadata (display name,
                    description, etc) of the Offering.
                  properties:
                    description:
                      description: Description shows the human-readable description
                        of this Offering.
                      type: string
                    displayName:
                      description: DisplayName shows the human-readable name of this
                        Offering.
                      type: string
                  type: object
                provider:
                  description: Provider references the Provider managing this Offering.
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
              required:
              - provider
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: test3000/kubecarrier-manager-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.5
    creationTimestamp: null
    labels:
      kubecarrier.io/role: manager
    name: providers.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      categories:
      - kubecarrier-tenant
      kind: Provider
      listKind: ProviderList
      plural: providers
      shortNames:
      - pr
      singular: provider
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.metadata.displayName
        name: Display Name
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: "Provider exposes information of an Account with the Provider
            role. \n Provider objects are created automatically by KubeCarrier in
            Account namespaces, that have a service offered to them via a Catalog."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ProviderSpec defines the desired state of Provider
              properties:
                metadata:
                  description: Metadata contains the metadata (display name, description,
                    etc) of the Provider.
                  properties:
                    description:
                      description: Description is the human-readable description of
                        this Account.
                      minLength: 1
                      type: string
                    displayName:
                      description: DisplayName is the human-readable name of this
                        Account.
                      minLength: 1
                      type: string
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: test3000/kubecarrier-manager-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.5
    creationTimestamp: null
    labels:
      kubecarrier.io/role: manager
    name: serviceclusterreferences.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      categories:
      - kubecarrier-tenant
      kind: ServiceClusterReference
      listKind: ServiceClusterReferenceList
      plural: serviceclusterreferences
      shortNames:
      - scr
      singular: serviceclusterreference
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.provider.name
        name: Provider
        type: string
      - jsonPath: .spec.metadata.displayName
        name: Display Name
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: "ServiceClusterReference exposes information about a Providers
            Cluster. \n ServiceClusterReference objects are created automatically
            by KubeCarrier in Account namespaces, that have a service offered to them
            via a Catalog."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ServiceClusterReferenceSpec defines the desired state of
                ServiceClusterReference
              properties:
                metadata:
                  description: Metadata contains the metadata (display name, description,
                    etc) of the ServiceCluster.
                  properties:
                    description:
                      description: Description is the human-readable description of
                        this ServiceCluster.
                      type: string
                    displayName:
                      description: DisplayName is the human-readable name of this
                        ServiceCluster.
                      type: string
                  type: object
                provider:
                  description: Provider references the Provider that this ServiceCluster
                    belongs to.
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
              required:
              - provider
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: test3000/kubecarrier-manager-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.5
    creationTimestamp: null
    labels:
      kubecarrier.io/role: manager
    name: tenants.catalog.kubecarrier.io
  spec:
    group: catalog.kubecarrier.io
    names:
      categories:
      - kubecarrier-provider
      kind: Tenant
      listKind: TenantList
      plural: tenants
      shortNames:
      - tr
      singular: tenant
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: "Tenant exposes information about available Tenants on the
            platform and allows a Provider to set custom labels on them. \n Tenant
            objects will be created for all Accounts with the role \"Tenant\" in all
            Account Namespaces with the role \"Provider\"."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: TenantSpec defines the desired state of Tenant
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: test3000/kubecarrier-manager-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.5
    creationTimestamp: null
    labels:
      kubecarrier.io/role: manager
    name: customresourcediscoveries.kubecarrier.io
  spec:
    group: kubecarrier.io
    names:
      kind: CustomResourceDiscovery
      listKind: CustomResourceDiscoveryList
      plural: customresourcediscoveries
      shortNames:
      - crdis
      singular: customresourcediscovery
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.crd.name
        name: CustomResourceDefinition
        type: string
      - jsonPath: .spec.serviceCluster.name
        name: ServiceCluster
        type: string
      - jsonPath: .status.phase
        name: Status
        type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: "CustomResourceDiscovery tells KubeCarrier to discover a CustomResource
            from a ServiceCluster, register it in the Management Cluster and start
            a new process to reconcile instances of this CRD. \n New instances of
            the CRD will be reconciled by creating a matching instance in the ServiceCluster.
            Each Namespace in the Managment Cluster needs a ServiceClusterAssignment
            object, mapping it to a Namespace in the ServiceCluster. \n A CustomResourceDiscovery
            instance will be ready, if the CustomResource was found in the ServiceCluster
            and a clone of it is established in the Management Cluster. Deleting the
            instance will also remove the CRD and all instances of it. \n **Example**
            ```yaml apiVersion: kubecarrier.io/v1alpha1 kind: CustomResourceDiscovery
            metadata:   name: couchdb.eu-west-1 spec:   crd:     name: couchdbs.couchdb.io
            \  serviceCluster:     name: eu-west-1 ```"
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: CustomResourceDiscoverySpec describes the desired state
                of a CustomResourceDiscovery.
              properties:
                crd:
                  description: CRD references a CustomResourceDefinition within the
                    ServiceCluster.
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                kindOverride:
                  description: KindOverride overrides the kind of the discovered CRD.
                  type: string
                serviceCluster:
                  description: ServiceCluster references a ServiceCluster to search
                    the CustomResourceDefinition on.
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                webhookStrategy:
                  default: None
                  description: 'WebhookStrategy configs the webhook of the CRD which
                    is registered in the management cluster by this CustomResourceDiscovery.
                    There are two possible values for this configuration {None (by
                    default), ServiceCluster} None (by default): Webhook will only
                    check if there is an available ServiceClusterAssignment in the
                    current Namespace. ServiceCluster: Webhook will call webhooks
                    of the CRD in the ServiceCluster with dry-run flag.'
                  enum:
                  - None
                  - ServiceCluster
                  type: string
              required:
              - crd
              - serviceCluster
              type: object
            status:
              description: CustomResourceDiscoveryStatus represents the observed state
                of a CustomResourceDiscovery.
              properties:
                conditions:
                  description: Conditions is a list of all conditions this CustomResourceDiscovery
                    is in.
                  items:
                    description: CustomResourceDiscoveryCondition contains details
                      of the current state of this CustomResourceDiscovery.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transit from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is the human readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is the (brief) reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status of the condition, one of ('True', 'False',
                          'Unknown').
                        type: string
                      type:
                        description: Type of the condition, currently ('Ready').
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                crd:
                  description: CRD defines the original CustomResourceDefinition specification
                    from the service cluster.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                managementClusterCRD:
                  description: ManagementClusterCRD references the CustomResourceDefinition
                    that is created by a CustomResourceDiscovery.
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                observedGeneration:
                  description: The most recent generation observed by the controller.
                  format: int64
                  type: integer
                phase:
                  description: DEPRECATED. Phase represents the current lifecycle
                    state of this object consider this field DEPRECATED, it will be
                    removed as soon as there is a mechanism to map conditions to a
                    string when printing the property is only present for display
                    purposes, for everything else use conditions
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.5
    creationTimestamp: null
    labels:
      kubecarrier.io/role: manager
    name: customresourcediscoverysets.kubecarrier.io
  spec:
    group: kubecarrier.io
    names:
      categories:
      - kubecarrier-provider
      kind: CustomResourceDiscoverySet
      listKind: CustomResourceDiscoverySetList
      plural: customresourcediscoverysets
      shortNames:
      - crdisset
      singular: customresourcediscoveryset
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.crd.name
        name: CustomResourceDefinition
        type: string
      - jsonPath: .status.phase
        name: Status
        type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: "CustomResourceDiscoverySet manages multiple CustomResourceDiscovery
            objects for a set of ServiceClusters. \n **Example** ```yaml apiVersion:
            kubecarrier.io/v1alpha1 kind: CustomResourceDiscoverySet metadata:   name:
            couchdb spec:   crd:     name: couchdbs.couchdb.io   serviceClusterSelector:
            {} ```"
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: CustomResourceDiscoverySetSpec describes the desired state
                of a CustomResourceDiscoverySet.
              properties:
                crd:
                  description: CRD references a CustomResourceDefinition within the
                    ServiceCluster.
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                kindOverride:
                  description: KindOverride overrides the kind of the discovered CRD.
                  type: string
                serviceClusterSelector:
                  description: ServiceClusterSelector references a set of ServiceClusters
                    to search the CustomResourceDefinition on.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                webhookStrategy:
                  default: None
                  description: 'WebhookStrategy configs the webhooks of the CRDs which
                    are registered in the management cluster by this CustomResourceDiscoverySet.
                    There are two possible values for this configuration {None (by
                    default), ServiceCluster} None (by default): Webhook will only
                    check if there is an available ServiceClusterAssignment in the
                    current Namespace. ServiceCluster: Webhook will call webhooks
                    of the CRD in the ServiceCluster with dry-run flag.'
                  enum:
                  - None
                  - ServiceCluster
                  type: string
              required:
              - crd
              - serviceClusterSelector
              type: object
            status:
              description: CustomResourceDiscoverySetStatus represents the observed
                state of a CustomResourceDiscoverySet.
              properties:
                conditions:
                  description: Conditions is a list of all conditions this CustomResourceDiscovery
                    is in.
                  items:
                    description: CustomResourceDiscoverySetCondition contains details
                      for the current condition of this CustomResourceDiscoverySet.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transit from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is the human readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is the (brief) reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status of the condition, one of ('True', 'False',
                          'Unknown').
                        type: string
                      type:
                        description: Type of the condition, currently ('Ready').
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                managementClusterCRDs:
                  description: ManagementClusterCRDs contains the CRDs information
                    that created by the CustomResourceDiscovery objects of this CustomResourceDiscoverySet.
                  items:
                    description: ObjectReference describes the link to another object
                      in the same Namespace.
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                observedGeneration:
                  description: The most recent generation observed by the controller.
                  format: int64
                  type: integer
                phase:
                  description: DEPRECATED. Phase represents the current lifecycle
                    state of this object consider this field DEPRECATED, it will be
                    removed as soon as there is a mechanism to map conditions to a
                    string when printing the property is only present for display
                    purposes, for everything else use conditions
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: test3000/kubecarrier-manager-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.5
    creationTimestamp: null
    labels:
      kubecarrier.io/role: manager
    name: serviceclusterassignments.kubecarrier.io
  spec:
    group: kubecarrier.io
    names:
      kind: ServiceClusterAssignment
      listKind: ServiceClusterAssignmentList
      plural: serviceclusterassignments
      shortNames:
      - sca
      singular: serviceclusterassignment
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.phase
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: "ServiceClusterAssignment is assigning a Namespace in the Management
            cluster with a Namespace on the ServiceCluster. \n The Namespace in the
            ServiceCluster will be created automatically and is reported in the instance
            status. \n **Example** ```yaml apiVersion: kubecarrier.io/v1alpha1 kind:
            ServiceClusterAssignment metadata:   name: example1.eu-west-1 spec:   serviceCluster:
            \    name: eu-west-1   managementNamespace:     name: example1 ```"
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ServiceClusterAssignmentSpec describes the desired state
                of ServiceClusterAssignment.
              properties:
                managementNamespace:
                  description: References the source namespace in the management cluster.
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                serviceCluster:
                  description: References the ServiceCluster.
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
              required:
              - managementNamespace
              - serviceCluster
              type: object
            status:
              description: ServiceClusterAssignmentStatus represents the observed
                state of ServiceClusterAssignment.
              properties:
                conditions:
                  description: Conditions is a list of all conditions this ServiceClusterAssignment
                    is in.
                  items:
                    description: ServiceClusterAssignmentCondition contains details
                      for the current condition of this ServiceClusterAssignment.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transit from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is the human readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is the (brief) reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status of the condition, one of ('True', 'False',
                          'Unknown').
                        type: string
                      type:
                        description: Type of the condition, currently ('Ready').
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                observedGeneration:
                  description: The most recent generation observed by the controller.
                  format: int64
                  type: integer
                phase:
                  description: DEPRECATED. Phase represents the current lifecycle
                    state of this object consider this field DEPRECATED, it will be
                    removed as soon as there is a mechanism to map conditions to a
                    string when printing the property is only present for display
                    purposes, for everything else use conditions
                  type: string
                serviceClusterNamespace:
                  description: ServiceClusterNamespace references the Namespace on
                    the ServiceCluster that was assigned.
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: test3000/kubecarrier-manager-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.5
    creationTimestamp: null
    labels:
      kubecarrier.io/role: manager
    name: serviceclusters.kubecarrier.io
  spec:
    group: kubecarrier.io
    names:
      categories:
      - kubecarrier-provider
      kind: ServiceCluster
      listKind: ServiceClusterList
      plural: serviceclusters
      shortNames:
      - sc
      singular: servicecluster
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.phase
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      - jsonPath: .spec.metadata.displayName
        name: Display Name
        type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: "ServiceCluster represents a Kubernets Cluster registered into
            KubeCarrier. \n **Example** ```yaml apiVersion: kubecarrier.io/v1alpha1
            kind: ServiceCluster metadata:   name: eu-west-1 spec:   metadata:     displayName:
            EU West 1   kubeconfigSecret:     name: eu-west-1-kubeconfig ```"
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ServiceClusterSpec describes the desired state of a ServiceCluster.
              properties:
                kubeconfigSecret:
                  description: KubeconfigSecret specifies the Kubeconfig to use when
                    connecting to the ServiceCluster.
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                metadata:
                  description: Metadata for display in the Service Catalog.
                  properties:
                    description:
                      description: Description is the human-readable description of
                        this ServiceCluster.
                      type: string
                    displayName:
                      description: DisplayName is the human-readable name of this
                        ServiceCluster.
                      type: string
                  type: object
              required:
              - kubeconfigSecret
              type: object
            status:
              description: ServiceClusterStatus represents the observed state of a
                ServiceCluster.
              properties:
                conditions:
                  description: Conditions is a list of all conditions this ServiceCluster
                    is in.
                  items:
                    description: ServiceClusterCondition contains details for the
                      current condition of this ServiceCluster.
                    properties:
                      lastHeartbeatTime:
                        description: LastHeartbeatTime is the timestamp corresponding
                          to the last update of this condition.
                        format: date-time
                        type: string
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition
                          transit from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message is the human readable message indicating
                          details about last transition.
                        type: string
                      reason:
                        description: Reason is the (brief) reason for the condition's
                          last transition.
                        type: string
                      status:
                        description: Status of the condition, one of ('True', 'False',
                          'Unknown').
                        type: string
                      type:
                        description: Type of the condition, currently ('Ready').
                        type: string
                    required:
                    - lastHeartbeatTime
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                kubernetesVersion:
                  description: KubernetesVersion of the service cluster API Server
                  properties:
                    buildDate:
                      type: string
                    compiler:
                      type: string
                    gitCommit:
                      type: string
                    gitTreeState:
                      type: string
                    gitVersion:
                      type: string
                    goVersion:
                      type: string
                    major:
                      type: string
                    minor:
                      type: string
                    platform:
                      type: string
                  required:
                  - buildDate
                  - compiler
                  - gitCommit
                  - gitTreeState
                  - gitVersion
                  - goVersion
                  - major
                  - minor
                  - platform
                  type: object
                observedGeneration:
                  description: The most recent generation observed by the controller.
                  format: int64
                  type: integer
                phase:
                  description: DEPRECATED. Phase represents the current lifecycle
                    state of this object consider this field DEPRECATED, it will be
                    removed as soon as there is a mechanism to map conditions to a
                    string when printing the property is only present for display
                    purposes, for everything else use conditions
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ""
      plural: ""
    conditions: []
    storedVersions: []
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: null
    labels:
      kubecarrier.io/role: manager
    name: kubecarrier-manager-manager-role
  rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - accounts
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - accounts/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - catalogentries
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - catalogentries/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - catalogentrysets
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - catalogentrysets/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - catalogs
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - catalogs/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - derivedcustomresources
    verbs:
    - create
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - derivedcustomresources/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - offerings
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - providers
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - serviceclusterreferences
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - catalog.kubecarrier.io
    resources:
    - tenants
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - kubecarrier.io
    resources:
    - customresourcediscoveries
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - kubecarrier.io
    resources:
    - customresourcediscoveries/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - kubecarrier.io
    resources:
    - customresourcediscoverysets
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - kubecarrier.io
    resources:
    - customresourcediscoverysets/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - kubecarrier.io
    resources:
    - serviceclusterassignments
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - kubecarrier.io
    resources:
    - serviceclusters
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - kubecarrier.io
    resources:
    - serviceclusters/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - operator.kubecarrier.io
    resources:
    - catapults
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - operator.kubecarrier.io
    resources:
    - catapults/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - operator.kubecarrier.io
    resources:
    - elevators
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - operator.kubecarrier.io
    resources:
    - elevators/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - operator.kubecarrier.io
    resources:
    - ferries
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - operator.kubecarrier.io
    resources:
    - ferries/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - rolebindings
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - roles
    verbs:
    - bind
    - create
    - delete
    - escalate
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      kubecarrier.io/role: manager
    name: kubecarrier-manager-sa
    namespace: test3000
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      kubecarrier.io/role: manager
    name: kubecarrier-manager-manager-rolebinding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: kubecarrier-manager-manager-role
  subjects:
  - kind: ServiceAccount
    name: kubecarrier-manager-sa
    namespace: test3000
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    labels:
      kubecarrier.io/role: manager
    name: kubecarrier-manager-leader-election-role
    namespace: test3000
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - ""
    resources:
    - configmaps/status
    verbs:
    - get
    - update
    - patch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    labels:
      kubecarrier.io/role: manager
    name: kubecarrier-manager-leader-election-rolebinding
    namespace: test3000
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: kubecarrier-manager-leader-election-role
  subjects:
  - kind: ServiceAccount
    name: kubecarrier-manager-sa
    namespace: test3000
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      control-plane: controller-manager
      kubecarrier.io/role: manager
    name: kubecarrier-manager-controller-manager
    namespace: test3000
  spec:
    replicas: 1
    selector:
      matchLabels:
        control-plane: controller-manager
        kubecarrier.io/role: manager
    template:
      metadata:
        labels:
          control-plane: controller-manager
          kubecarrier.io/role: manager
      spec:
        containers:
        - args:
          - --cert-dir=$(CERT_DIR)
          env:
          - name: KUBECARRIER_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CERT_DIR
            value: /tmp/k8s-webhook-server/serving-certs
          image: quay.io/kubecarrier/manager:was not build properly
          name: manager
          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          - containerPort: 9440
            name: readiness-port
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: readiness-port
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
        serviceAccountName: kubecarrier-manager-sa
        terminationGracePeriodSeconds: 10
        volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
- apiVersion: admissionregistration.k8s.io/v1beta1
  kind: ValidatingWebhookConfiguration
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: test3000/kubecarrier-manager-serving-cert
    creationTimestamp: null
    labels:
      kubecarrier.io/role: manager
    name: kubecarrier-manager-validating-webhook-configuration
  webhooks:
  - clientConfig:
      caBundle: Cg==
      service:
        name: kubecarrier-manager-webhook-service
        namespace: test3000
        path: /validate-catalog-kubecarrier-io-v1alpha1-account
    failurePolicy: Fail
    name: vaccount.kubecarrier.io
    rules:
    - apiGroups:
      - catalog.kubecarrier.io
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      - DELETE
      resources:
      - accounts
  - clientConfig:
      caBundle: Cg==
      service:
        name: kubecarrier-manager-webhook-service
        namespace: test3000
        path: /validate-catalog-kubecarrier-io-v1alpha1-catalogentry
    failurePolicy: Fail
    name: vcatalogentry.kubecarrier.io
    rules:
    - apiGroups:
      - catalog.kubecarrier.io
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - catalogentries
  - clientConfig:
      caBundle: Cg==
      service:
        name: kubecarrier-manager-webhook-service
        namespace: test3000
        path: /validate-kubecarrier-io-v1alpha1-customresourcediscovery
    failurePolicy: Fail
    name: vcustomresourcediscovery.kubecarrier.io
    rules:
    - apiGroups:
      - kubecarrier.io
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - customresourcediscoveries
  - clientConfig:
      caBundle: Cg==
      service:
        name: kubecarrier-manager-webhook-service
        namespace: test3000
        path: /validate-catalog-kubecarrier-io-v1alpha1-derivedcustomresource
    failurePolicy: Fail
    name: vderivedcustomresource.kubecarrier.io
    rules:
    - apiGroups:
      - catalog.kubecarrier.io
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - derivedcustomresources
  - clientConfig:
      caBundle: Cg==
      service:
        name: kubecarrier-manager-webhook-service
        namespace: test3000
        path: /validate-catalog-kubecarrier-io-v1alpha1-offering
    failurePolicy: Fail
    name: voffering.kubecarrier.io
    rules:
    - apiGroups:
      - catalog.kubecarrier.io
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - offerings
  - clientConfig:
      caBundle: Cg==
      service:
        name: kubecarrier-manager-webhook-service
        namespace: test3000
        path: /validate-catalog-kubecarrier-io-v1alpha1-provider
    failurePolicy: Fail
    name: vprovider.kubecarrier.io
    rules:
    - apiGroups:
      - catalog.kubecarrier.io
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - providers
  - clientConfig:
      caBundle: Cg==
      service:
        name: kubecarrier-manager-webhook-service
        namespace: test3000
        path: /validate-kubecarrier-io-v1alpha1-servicecluster
    failurePolicy: Fail
    name: vservicecluster.kubecarrier.io
    rules:
    - apiGroups:
      - kubecarrier.io
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      resources:
      - serviceclusters
  - clientConfig:
      caBundle: Cg==
      service:
        name: kubecarrier-manager-webhook-service
        namespace: test3000
        path: /validate-kubecarrier-io-v1alpha1-serviceclusterassignment
    failurePolicy: Fail
    name: vserviceclusterassignment.kubecarrier.io
    rules:
    - apiGroups:
      - kubecarrier.io
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - serviceclusterassignments
  - clientConfig:
      caBundle: Cg==
      service:
        name: kubecarrier-manager-webhook-service
        namespace: test3000
        path: /validate-catalog-kubecarrier-io-v1alpha1-serviceclusterreference
    failurePolicy: Fail
    name: vserviceclusterreference.kubecarrier.io
    rules:
    - apiGroups:
      - catalog.kubecarrier.io
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - serviceclusterreferences
  - clientConfig:
      caBundle: Cg==
      service:
        name: kubecarrier-manager-webhook-service
        namespace: test3000
        path: /validate-catalog-kubecarrier-io-v1alpha1-tenant
    failurePolicy: Fail
    name: vtenant.kubecarrier.io
    rules:
    - apiGroups:
      - catalog.kubecarrier.io
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      resources:
      - tenants
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      kubecarrier.io/role: manager
    name: kubecarrier-manager-webhook-service
    namespace: test3000
  spec:
    ports:
    - port: 443
      targetPort: 9443
    selector:
      control-plane: controller-manager
      kubecarrier.io/role: manager
- apiVersion: cert-manager.io/v1alpha2
  kind: Issuer
  metadata:
    labels:
      kubecarrier.io/role: manager
    name: kubecarrier-manager-selfsigned-issuer
    namespace: test3000
  spec:
    selfSigned: {}
- apiVersion: cert-manager.io/v1alpha2
  kind: Certificate
  metadata:
    labels:
      kubecarrier.io/role: manager
    name: kubecarrier-manager-serving-cert
    namespace: test3000
  spec:
    dnsNames:
    - kubecarrier-manager-webhook-service.test3000.svc
    - kubecarrier-manager-webhook-service.test3000.svc.cluster.local
    issuerRef:
      kind: Issuer
      name: kubecarrier-manager-selfsigned-issuer
    secretName: webhook-server-cert
