/*
Copyright 2020 The KubeCarrier Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kubecarrier.proto

package v1

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Types
type APIVersion struct {
	Version              string               `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Branch               string               `protobuf:"bytes,2,opt,name=branch,proto3" json:"branch,omitempty"`
	BuildDate            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=buildDate,proto3" json:"buildDate,omitempty"`
	GoVersion            string               `protobuf:"bytes,4,opt,name=goVersion,proto3" json:"goVersion,omitempty"`
	Platform             string               `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *APIVersion) Reset()         { *m = APIVersion{} }
func (m *APIVersion) String() string { return proto.CompactTextString(m) }
func (*APIVersion) ProtoMessage()    {}
func (*APIVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_046afb50055b7632, []int{0}
}

func (m *APIVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APIVersion.Unmarshal(m, b)
}
func (m *APIVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APIVersion.Marshal(b, m, deterministic)
}
func (m *APIVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIVersion.Merge(m, src)
}
func (m *APIVersion) XXX_Size() int {
	return xxx_messageInfo_APIVersion.Size(m)
}
func (m *APIVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_APIVersion.DiscardUnknown(m)
}

var xxx_messageInfo_APIVersion proto.InternalMessageInfo

func (m *APIVersion) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *APIVersion) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *APIVersion) GetBuildDate() *timestamp.Timestamp {
	if m != nil {
		return m.BuildDate
	}
	return nil
}

func (m *APIVersion) GetGoVersion() string {
	if m != nil {
		return m.GoVersion
	}
	return ""
}

func (m *APIVersion) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

// Requests/Responses
type VersionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionRequest) Reset()         { *m = VersionRequest{} }
func (m *VersionRequest) String() string { return proto.CompactTextString(m) }
func (*VersionRequest) ProtoMessage()    {}
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_046afb50055b7632, []int{1}
}

func (m *VersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionRequest.Unmarshal(m, b)
}
func (m *VersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionRequest.Marshal(b, m, deterministic)
}
func (m *VersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionRequest.Merge(m, src)
}
func (m *VersionRequest) XXX_Size() int {
	return xxx_messageInfo_VersionRequest.Size(m)
}
func (m *VersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VersionRequest proto.InternalMessageInfo

type UserInfo struct {
	User                 string   `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	Groups               []string `protobuf:"bytes,2,rep,name=Groups,proto3" json:"Groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_046afb50055b7632, []int{2}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *UserInfo) GetGroups() []string {
	if m != nil {
		return m.Groups
	}
	return nil
}

func init() {
	proto.RegisterType((*APIVersion)(nil), "kubecarrier.api.v1.APIVersion")
	proto.RegisterType((*VersionRequest)(nil), "kubecarrier.api.v1.VersionRequest")
	proto.RegisterType((*UserInfo)(nil), "kubecarrier.api.v1.UserInfo")
}

func init() {
	proto.RegisterFile("kubecarrier.proto", fileDescriptor_046afb50055b7632)
}

var fileDescriptor_046afb50055b7632 = []byte{
	// 363 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0x4b, 0x4e, 0xeb, 0x30,
	0x14, 0x55, 0xd2, 0xbe, 0x7e, 0x6e, 0xdf, 0x7b, 0x7a, 0xef, 0x22, 0x55, 0x51, 0xa8, 0xa0, 0xca,
	0xa8, 0xa3, 0x44, 0x2d, 0x12, 0x62, 0x5a, 0x3e, 0x42, 0x15, 0x13, 0x14, 0xf1, 0x91, 0x98, 0xd9,
	0xc5, 0x6d, 0x2d, 0x9a, 0xd8, 0x38, 0x4e, 0x10, 0x53, 0xb6, 0xc0, 0x4e, 0xd8, 0x03, 0x2b, 0x60,
	0x0b, 0x2c, 0x04, 0xc5, 0x49, 0x28, 0xd0, 0xce, 0xee, 0xf1, 0x39, 0x3e, 0xf7, 0xf8, 0x18, 0xfe,
	0xdf, 0xa5, 0x94, 0x4d, 0x89, 0x52, 0x9c, 0x29, 0x5f, 0x2a, 0xa1, 0x05, 0xe2, 0xd7, 0x23, 0x22,
	0xb9, 0x9f, 0x0d, 0xdd, 0xdd, 0xb9, 0x10, 0xf3, 0x25, 0x0b, 0x8c, 0x82, 0xa6, 0xb3, 0x40, 0xf3,
	0x88, 0x25, 0x9a, 0x44, 0xb2, 0xb8, 0xe4, 0x6e, 0xff, 0x14, 0xb0, 0x48, 0xea, 0xc7, 0x92, 0xec,
	0x95, 0x24, 0x91, 0x3c, 0x20, 0x71, 0x2c, 0x34, 0xd1, 0x5c, 0xc4, 0x49, 0xc1, 0x7a, 0x2f, 0x16,
	0xc0, 0xf8, 0x7c, 0x72, 0xc5, 0x54, 0xc2, 0x45, 0x8c, 0x0e, 0x34, 0xb3, 0x62, 0x74, 0xac, 0xbe,
	0x35, 0x68, 0x87, 0x15, 0xc4, 0x2e, 0x34, 0xa8, 0x22, 0xf1, 0x74, 0xe1, 0xd8, 0x86, 0x28, 0x11,
	0x1e, 0x40, 0x9b, 0xa6, 0x7c, 0x79, 0x7b, 0x4c, 0x34, 0x73, 0x6a, 0x7d, 0x6b, 0xd0, 0x19, 0xb9,
	0x7e, 0xb1, 0xd2, 0xaf, 0xf2, 0xf8, 0x17, 0x55, 0xe0, 0x70, 0x25, 0xc6, 0x1e, 0xb4, 0xe7, 0xa2,
	0x5c, 0xec, 0xd4, 0x8d, 0xe9, 0xea, 0x00, 0x5d, 0x68, 0xc9, 0x25, 0xd1, 0x33, 0xa1, 0x22, 0xe7,
	0x97, 0x21, 0x3f, 0xb1, 0xf7, 0x0f, 0xfe, 0x96, 0xb2, 0x90, 0xdd, 0xa7, 0x2c, 0xd1, 0xde, 0x3e,
	0xb4, 0x2e, 0x13, 0xa6, 0x26, 0xf1, 0x4c, 0x20, 0x42, 0x3d, 0x9f, 0xcb, 0x07, 0x98, 0x39, 0x4f,
	0x7f, 0xaa, 0x44, 0x2a, 0x13, 0xc7, 0xee, 0xd7, 0xf2, 0xf4, 0x05, 0x1a, 0xbd, 0x5a, 0xd0, 0x39,
	0x4b, 0x29, 0x3b, 0x2a, 0x1a, 0x47, 0x0a, 0xcd, 0x2a, 0x80, 0xe7, 0xaf, 0x7f, 0x85, 0xff, 0x7d,
	0xad, 0xbb, 0xb3, 0x49, 0xb3, 0xaa, 0xd3, 0xdb, 0x7a, 0x7a, 0x7b, 0x7f, 0xb6, 0xff, 0x60, 0x27,
	0xc8, 0x86, 0x41, 0xd5, 0x64, 0x08, 0x8d, 0xeb, 0x85, 0x18, 0x47, 0x13, 0xec, 0xae, 0x15, 0x75,
	0x92, 0x7f, 0x9c, 0xdb, 0xdb, 0x64, 0x5b, 0xbd, 0xcf, 0x43, 0x63, 0xfa, 0x1b, 0x21, 0x37, 0x7d,
	0x58, 0x08, 0x12, 0xf1, 0xc3, 0xfa, 0x8d, 0x9d, 0x0d, 0x69, 0xc3, 0xf8, 0xec, 0x7d, 0x04, 0x00,
	0x00, 0xff, 0xff, 0x9e, 0x52, 0x92, 0xf8, 0x58, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// KubeCarrierClient is the client API for KubeCarrier service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KubeCarrierClient interface {
	Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*APIVersion, error)
	WhoAmI(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*UserInfo, error)
}

type kubeCarrierClient struct {
	cc grpc.ClientConnInterface
}

func NewKubeCarrierClient(cc grpc.ClientConnInterface) KubeCarrierClient {
	return &kubeCarrierClient{cc}
}

func (c *kubeCarrierClient) Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*APIVersion, error) {
	out := new(APIVersion)
	err := c.cc.Invoke(ctx, "/kubecarrier.api.v1.KubeCarrier/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kubeCarrierClient) WhoAmI(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*UserInfo, error) {
	out := new(UserInfo)
	err := c.cc.Invoke(ctx, "/kubecarrier.api.v1.KubeCarrier/WhoAmI", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KubeCarrierServer is the server API for KubeCarrier service.
type KubeCarrierServer interface {
	Version(context.Context, *VersionRequest) (*APIVersion, error)
	WhoAmI(context.Context, *empty.Empty) (*UserInfo, error)
}

// UnimplementedKubeCarrierServer can be embedded to have forward compatible implementations.
type UnimplementedKubeCarrierServer struct {
}

func (*UnimplementedKubeCarrierServer) Version(ctx context.Context, req *VersionRequest) (*APIVersion, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Version not implemented")
}
func (*UnimplementedKubeCarrierServer) WhoAmI(ctx context.Context, req *empty.Empty) (*UserInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhoAmI not implemented")
}

func RegisterKubeCarrierServer(s *grpc.Server, srv KubeCarrierServer) {
	s.RegisterService(&_KubeCarrier_serviceDesc, srv)
}

func _KubeCarrier_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KubeCarrierServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kubecarrier.api.v1.KubeCarrier/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KubeCarrierServer).Version(ctx, req.(*VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KubeCarrier_WhoAmI_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KubeCarrierServer).WhoAmI(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kubecarrier.api.v1.KubeCarrier/WhoAmI",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KubeCarrierServer).WhoAmI(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _KubeCarrier_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kubecarrier.api.v1.KubeCarrier",
	HandlerType: (*KubeCarrierServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _KubeCarrier_Version_Handler,
		},
		{
			MethodName: "WhoAmI",
			Handler:    _KubeCarrier_WhoAmI_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kubecarrier.proto",
}
